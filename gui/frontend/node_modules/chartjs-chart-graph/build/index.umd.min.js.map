{"version":3,"file":"index.umd.min.js","sources":["../src/elements/EdgeLine.ts","../src/controllers/interpolatePoints.ts","../src/controllers/patchController.ts","../src/controllers/GraphController.ts","../.yarn/cache/d3-force-npm-3.0.0-462e87e63b-6c7e96438c.zip/node_modules/d3-force/src/center.js","../.yarn/cache/d3-quadtree-npm-3.0.1-6f0eae8c83-5469d46276.zip/node_modules/d3-quadtree/src/add.js","../.yarn/cache/d3-quadtree-npm-3.0.1-6f0eae8c83-5469d46276.zip/node_modules/d3-quadtree/src/quad.js","../.yarn/cache/d3-quadtree-npm-3.0.1-6f0eae8c83-5469d46276.zip/node_modules/d3-quadtree/src/x.js","../.yarn/cache/d3-quadtree-npm-3.0.1-6f0eae8c83-5469d46276.zip/node_modules/d3-quadtree/src/y.js","../.yarn/cache/d3-quadtree-npm-3.0.1-6f0eae8c83-5469d46276.zip/node_modules/d3-quadtree/src/quadtree.js","../.yarn/cache/d3-force-npm-3.0.0-462e87e63b-6c7e96438c.zip/node_modules/d3-force/src/constant.js","../.yarn/cache/d3-force-npm-3.0.0-462e87e63b-6c7e96438c.zip/node_modules/d3-force/src/jiggle.js","../.yarn/cache/d3-force-npm-3.0.0-462e87e63b-6c7e96438c.zip/node_modules/d3-force/src/collide.js","../.yarn/cache/d3-force-npm-3.0.0-462e87e63b-6c7e96438c.zip/node_modules/d3-force/src/link.js","../.yarn/cache/d3-quadtree-npm-3.0.1-6f0eae8c83-5469d46276.zip/node_modules/d3-quadtree/src/cover.js","../.yarn/cache/d3-quadtree-npm-3.0.1-6f0eae8c83-5469d46276.zip/node_modules/d3-quadtree/src/data.js","../.yarn/cache/d3-quadtree-npm-3.0.1-6f0eae8c83-5469d46276.zip/node_modules/d3-quadtree/src/extent.js","../.yarn/cache/d3-quadtree-npm-3.0.1-6f0eae8c83-5469d46276.zip/node_modules/d3-quadtree/src/find.js","../.yarn/cache/d3-quadtree-npm-3.0.1-6f0eae8c83-5469d46276.zip/node_modules/d3-quadtree/src/remove.js","../.yarn/cache/d3-quadtree-npm-3.0.1-6f0eae8c83-5469d46276.zip/node_modules/d3-quadtree/src/root.js","../.yarn/cache/d3-quadtree-npm-3.0.1-6f0eae8c83-5469d46276.zip/node_modules/d3-quadtree/src/size.js","../.yarn/cache/d3-quadtree-npm-3.0.1-6f0eae8c83-5469d46276.zip/node_modules/d3-quadtree/src/visit.js","../.yarn/cache/d3-quadtree-npm-3.0.1-6f0eae8c83-5469d46276.zip/node_modules/d3-quadtree/src/visitAfter.js","../.yarn/cache/d3-dispatch-npm-3.0.1-5f44c3166f-fdfd4a230f.zip/node_modules/d3-dispatch/src/dispatch.js","../.yarn/cache/d3-timer-npm-3.0.1-45083f465d-1cfddf86d7.zip/node_modules/d3-timer/src/timer.js","../.yarn/cache/d3-force-npm-3.0.0-462e87e63b-6c7e96438c.zip/node_modules/d3-force/src/lcg.js","../.yarn/cache/d3-force-npm-3.0.0-462e87e63b-6c7e96438c.zip/node_modules/d3-force/src/simulation.js","../.yarn/cache/d3-force-npm-3.0.0-462e87e63b-6c7e96438c.zip/node_modules/d3-force/src/manyBody.js","../.yarn/cache/d3-force-npm-3.0.0-462e87e63b-6c7e96438c.zip/node_modules/d3-force/src/radial.js","../.yarn/cache/d3-force-npm-3.0.0-462e87e63b-6c7e96438c.zip/node_modules/d3-force/src/x.js","../.yarn/cache/d3-force-npm-3.0.0-462e87e63b-6c7e96438c.zip/node_modules/d3-force/src/y.js","../src/controllers/ForceDirectedGraphController.ts","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/cluster.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/hierarchy/count.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/hierarchy/index.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/tree.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/hierarchy/each.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/hierarchy/find.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/hierarchy/sum.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/hierarchy/sort.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/hierarchy/path.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/hierarchy/descendants.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/hierarchy/leaves.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/hierarchy/links.js","../.yarn/cache/d3-hierarchy-npm-3.1.2-1ac1bae7e3-0fd946a8c5.zip/node_modules/d3-hierarchy/src/hierarchy/iterator.js","../src/controllers/DendrogramController.ts","../src/controllers/TreeController.ts","../src/index.umd.ts"],"sourcesContent":["import { LineElement, } from 'chart.js';\nfunction horizontal(from, to, options) {\n    return {\n        fx: (to.x - from.x) * options.tension,\n        fy: 0,\n        tx: (from.x - to.x) * options.tension,\n        ty: 0,\n    };\n}\nfunction vertical(from, to, options) {\n    return {\n        fx: 0,\n        fy: (to.y - from.y) * options.tension,\n        tx: 0,\n        ty: (from.y - to.y) * options.tension,\n    };\n}\nfunction radial(from, to, options) {\n    const angleHelper = Math.hypot(to.x - from.x, to.y - from.y) * options.tension;\n    return {\n        fx: Number.isNaN(from.angle) ? 0 : Math.cos(from.angle || 0) * angleHelper,\n        fy: Number.isNaN(from.angle) ? 0 : Math.sin(from.angle || 0) * -angleHelper,\n        tx: Number.isNaN(to.angle) ? 0 : Math.cos(to.angle || 0) * -angleHelper,\n        ty: Number.isNaN(to.angle) ? 0 : Math.sin(to.angle || 0) * angleHelper,\n    };\n}\nexport class EdgeLine extends LineElement {\n    draw(ctx) {\n        const { options } = this;\n        ctx.save();\n        ctx.lineCap = options.borderCapStyle;\n        ctx.setLineDash(options.borderDash || []);\n        ctx.lineDashOffset = options.borderDashOffset;\n        ctx.lineJoin = options.borderJoinStyle;\n        ctx.lineWidth = options.borderWidth;\n        ctx.strokeStyle = options.borderColor;\n        const orientations = {\n            horizontal,\n            vertical,\n            radial,\n        };\n        const layout = orientations[this._orientation] || orientations.horizontal;\n        const renderLine = (from, to) => {\n            const shift = layout(from, to, options);\n            const fromX = {\n                cpx: from.x + shift.fx,\n                cpy: from.y + shift.fy,\n            };\n            const toX = {\n                cpx: to.x + shift.tx,\n                cpy: to.y + shift.ty,\n            };\n            if (options.stepped === 'middle') {\n                const midpoint = (from.x + to.x) / 2.0;\n                ctx.lineTo(midpoint, from.y);\n                ctx.lineTo(midpoint, to.y);\n                ctx.lineTo(to.x, to.y);\n            }\n            else if (options.stepped === 'after') {\n                ctx.lineTo(from.x, to.y);\n                ctx.lineTo(to.x, to.y);\n            }\n            else if (options.stepped) {\n                ctx.lineTo(to.x, from.y);\n                ctx.lineTo(to.x, to.y);\n            }\n            else if (options.tension) {\n                ctx.bezierCurveTo(fromX.cpx, fromX.cpy, toX.cpx, toX.cpy, to.x, to.y);\n            }\n            else {\n                ctx.lineTo(to.x, to.y);\n            }\n            return to;\n        };\n        const source = this.source.getProps(['x', 'y', 'angle']);\n        const target = this.target.getProps(['x', 'y', 'angle']);\n        const points = this.getProps(['points']).points;\n        ctx.beginPath();\n        let from = source;\n        ctx.moveTo(from.x, from.y);\n        if (points && points.length > 0) {\n            from = points.reduce(renderLine, from);\n        }\n        renderLine(from, target);\n        ctx.stroke();\n        if (options.directed) {\n            const to = target;\n            const shift = layout(from, to, options);\n            const s = options.arrowHeadSize;\n            const offset = options.arrowHeadOffset;\n            ctx.save();\n            ctx.translate(to.x, target.y);\n            if (options.stepped === 'middle') {\n                const midpoint = (from.x + to.x) / 2.0;\n                ctx.rotate(Math.atan2(to.y - to.y, to.x - midpoint));\n            }\n            else if (options.stepped === 'after') {\n                ctx.rotate(Math.atan2(to.y - to.y, to.x - from.x));\n            }\n            else if (options.stepped) {\n                ctx.rotate(Math.atan2(to.y - from.y, to.x - to.x));\n            }\n            else if (options.tension) {\n                const toX = {\n                    x: to.x + shift.tx,\n                    y: to.y + shift.ty,\n                };\n                const f = 0.1;\n                ctx.rotate(Math.atan2(to.y - toX.y * (1 - f) - from.y * f, to.x - toX.x * (1 - f) - from.x * f));\n            }\n            else {\n                ctx.rotate(Math.atan2(to.y - from.y, to.x - from.x));\n            }\n            ctx.translate(-offset, 0);\n            ctx.beginPath();\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-s, -s / 2);\n            ctx.lineTo(-s * 0.9, 0);\n            ctx.lineTo(-s, s / 2);\n            ctx.closePath();\n            ctx.fillStyle = ctx.strokeStyle;\n            ctx.fill();\n            ctx.restore();\n        }\n        ctx.restore();\n    }\n}\nEdgeLine.id = 'edgeLine';\nEdgeLine.defaults = {\n    ...LineElement.defaults,\n    tension: 0,\n    directed: false,\n    arrowHeadSize: 15,\n    arrowHeadOffset: 5,\n};\nEdgeLine.defaultRoutes = LineElement.defaultRoutes;\nEdgeLine.descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash',\n};\n//# sourceMappingURL=EdgeLine.js.map","function interpolateNumber(from, to, factor) {\n    if (from === to) {\n        return to;\n    }\n    return from + (to - from) * factor;\n}\nfunction interpolatorPoint(fromArray, i, to, factor) {\n    const from = fromArray[i] || fromArray[i - 1] || fromArray._source;\n    if (!from) {\n        return to;\n    }\n    const x = interpolateNumber(from.x, to.x, factor);\n    const y = interpolateNumber(from.y, to.y, factor);\n    const angle = Number.isNaN(from.angle) ? interpolateNumber(from.angle, to.angle, factor) : undefined;\n    return { x, y, angle };\n}\nexport default function interpolatePoints(from, to, factor) {\n    if (Array.isArray(from) && Array.isArray(to) && to.length > 0) {\n        return to.map((t, i) => interpolatorPoint(from, i, t, factor));\n    }\n    return to;\n}\n//# sourceMappingURL=interpolatePoints.js.map","import { registry } from 'chart.js';\nexport default function patchController(type, config, controller, elements = [], scales = []) {\n    registry.addControllers(controller);\n    if (Array.isArray(elements)) {\n        registry.addElements(...elements);\n    }\n    else {\n        registry.addElements(elements);\n    }\n    if (Array.isArray(scales)) {\n        registry.addScales(...scales);\n    }\n    else {\n        registry.addScales(scales);\n    }\n    const c = config;\n    c.type = type;\n    return c;\n}\n//# sourceMappingURL=patchController.js.map","import { defaults, Chart, ScatterController, registry, LinearScale, PointElement, } from 'chart.js';\nimport { merge, clipArea, unclipArea, listenArrayEvents, unlistenArrayEvents } from 'chart.js/helpers';\nimport { EdgeLine } from '../elements';\nimport interpolatePoints from './interpolatePoints';\nimport patchController from './patchController';\nexport class GraphController extends ScatterController {\n    constructor() {\n        super(...arguments);\n        this._scheduleResyncLayoutId = -1;\n        this._edgeListener = {\n            _onDataPush: (...args) => {\n                const count = args.length;\n                const start = this.getDataset().edges.length - count;\n                const parsed = this._cachedMeta._parsedEdges;\n                args.forEach((edge) => {\n                    parsed.push(this._parseDefinedEdge(edge));\n                });\n                this._insertEdgeElements(start, count);\n            },\n            _onDataPop: () => {\n                this._cachedMeta.edges.pop();\n                this._cachedMeta._parsedEdges.pop();\n                this._scheduleResyncLayout();\n            },\n            _onDataShift: () => {\n                this._cachedMeta.edges.shift();\n                this._cachedMeta._parsedEdges.shift();\n                this._scheduleResyncLayout();\n            },\n            _onDataSplice: (start, count, ...args) => {\n                this._cachedMeta.edges.splice(start, count);\n                this._cachedMeta._parsedEdges.splice(start, count);\n                if (args.length > 0) {\n                    const parsed = this._cachedMeta._parsedEdges;\n                    parsed.splice(start, 0, ...args.map((edge) => this._parseDefinedEdge(edge)));\n                    this._insertEdgeElements(start, args.length);\n                }\n                else {\n                    this._scheduleResyncLayout();\n                }\n            },\n            _onDataUnshift: (...args) => {\n                const parsed = this._cachedMeta._parsedEdges;\n                parsed.unshift(...args.map((edge) => this._parseDefinedEdge(edge)));\n                this._insertEdgeElements(0, args.length);\n            },\n        };\n    }\n    initialize() {\n        const type = this._type;\n        const defaultConfig = defaults.datasets[type];\n        this.edgeElementType = registry.getElement(defaultConfig.edgeElementType);\n        super.initialize();\n        this.enableOptionSharing = true;\n        this._scheduleResyncLayout();\n    }\n    parse(start, count) {\n        const meta = this._cachedMeta;\n        const data = this._data;\n        const { iScale, vScale } = meta;\n        for (let i = 0; i < count; i += 1) {\n            const index = i + start;\n            const d = data[index];\n            const v = (meta._parsed[index] || {});\n            if (d && typeof d.x === 'number') {\n                v.x = d.x;\n            }\n            if (d && typeof d.y === 'number') {\n                v.y = d.y;\n            }\n            meta._parsed[index] = v;\n        }\n        if (meta._parsed.length > data.length) {\n            meta._parsed.splice(data.length, meta._parsed.length - data.length);\n        }\n        this._cachedMeta._sorted = false;\n        iScale._dataLimitsCached = false;\n        vScale._dataLimitsCached = false;\n        this._parseEdges();\n    }\n    reset() {\n        this.resetLayout();\n        super.reset();\n    }\n    update(mode) {\n        super.update(mode);\n        const meta = this._cachedMeta;\n        const edges = meta.edges || [];\n        this.updateEdgeElements(edges, 0, mode);\n    }\n    destroy() {\n        ScatterController.prototype.destroy.call(this);\n        if (this._edges) {\n            unlistenArrayEvents(this._edges, this._edgeListener);\n        }\n        this.stopLayout();\n    }\n    updateEdgeElements(edges, start, mode) {\n        var _a, _b, _c;\n        const bak = {\n            _cachedDataOpts: this._cachedDataOpts,\n            dataElementType: this.dataElementType,\n            _sharedOptions: this._sharedOptions,\n        };\n        this._cachedDataOpts = {};\n        this.dataElementType = this.edgeElementType;\n        this._sharedOptions = this._edgeSharedOptions;\n        const dataset = this.getDataset();\n        const meta = this._cachedMeta;\n        const nodeElements = meta.data;\n        const data = this._cachedMeta._parsedEdges;\n        this.getContext(-1, false, mode);\n        this.getDataset = () => {\n            return new Proxy(dataset, {\n                get(obj, prop) {\n                    var _a;\n                    return prop === 'data' ? (_a = obj.edges) !== null && _a !== void 0 ? _a : [] : obj[prop];\n                },\n            });\n        };\n        this.getParsed = (index) => {\n            return data[index];\n        };\n        meta.data = meta.edges;\n        const reset = mode === 'reset';\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const dummyShared = {};\n        const sharedOptions = (_a = this.getSharedOptions(firstOpts)) !== null && _a !== void 0 ? _a : dummyShared;\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const { xScale, yScale } = meta;\n        const base = {\n            x: (_b = xScale === null || xScale === void 0 ? void 0 : xScale.getBasePixel()) !== null && _b !== void 0 ? _b : 0,\n            y: (_c = yScale === null || yScale === void 0 ? void 0 : yScale.getBasePixel()) !== null && _c !== void 0 ? _c : 0,\n        };\n        function copyPoint(point) {\n            var _a, _b;\n            const x = reset ? base.x : (_a = xScale === null || xScale === void 0 ? void 0 : xScale.getPixelForValue(point.x, 0)) !== null && _a !== void 0 ? _a : 0;\n            const y = reset ? base.y : (_b = yScale === null || yScale === void 0 ? void 0 : yScale.getPixelForValue(point.y, 0)) !== null && _b !== void 0 ? _b : 0;\n            return {\n                x,\n                y,\n                angle: point.angle,\n            };\n        }\n        for (let i = 0; i < edges.length; i += 1) {\n            const edge = edges[i];\n            const index = start + i;\n            const parsed = data[index];\n            const properties = {\n                source: nodeElements[parsed.source],\n                target: nodeElements[parsed.target],\n                points: Array.isArray(parsed.points) ? parsed.points.map((p) => copyPoint(p)) : [],\n            };\n            properties.points._source = nodeElements[parsed.source];\n            if (includeOptions) {\n                if (sharedOptions !== dummyShared) {\n                    properties.options = sharedOptions;\n                }\n                else {\n                    properties.options = this.resolveDataElementOptions(index, mode);\n                }\n            }\n            this.updateEdgeElement(edge, index, properties, mode);\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        this._edgeSharedOptions = this._sharedOptions;\n        Object.assign(this, bak);\n        delete this.getDataset;\n        delete this.getParsed;\n        meta.data = nodeElements;\n    }\n    updateEdgeElement(edge, index, properties, mode) {\n        super.updateElement(edge, index, properties, mode);\n    }\n    updateElement(point, index, properties, mode) {\n        var _a;\n        if (mode === 'reset') {\n            const { xScale } = this._cachedMeta;\n            properties.x = (_a = xScale === null || xScale === void 0 ? void 0 : xScale.getBasePixel()) !== null && _a !== void 0 ? _a : 0;\n        }\n        super.updateElement(point, index, properties, mode);\n    }\n    resolveNodeIndex(nodes, ref) {\n        if (typeof ref === 'number') {\n            return ref;\n        }\n        if (typeof ref === 'string') {\n            const labels = this.chart.data.labels;\n            return labels.indexOf(ref);\n        }\n        const nIndex = nodes.indexOf(ref);\n        if (nIndex >= 0) {\n            return nIndex;\n        }\n        const data = this.getDataset().data;\n        const index = data.indexOf(ref);\n        if (index >= 0) {\n            return index;\n        }\n        console.warn('cannot resolve edge ref', ref);\n        return -1;\n    }\n    buildOrUpdateElements() {\n        const dataset = this.getDataset();\n        const edges = dataset.edges || [];\n        if (this._edges !== edges) {\n            if (this._edges) {\n                unlistenArrayEvents(this._edges, this._edgeListener);\n            }\n            if (edges && Object.isExtensible(edges)) {\n                listenArrayEvents(edges, this._edgeListener);\n            }\n            this._edges = edges;\n        }\n        super.buildOrUpdateElements();\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const edges = this._cachedMeta.edges || [];\n        const elements = (meta.data || []);\n        const area = this.chart.chartArea;\n        const ctx = this._ctx;\n        if (edges.length > 0) {\n            clipArea(ctx, area);\n            edges.forEach((edge) => edge.draw.call(edge, ctx, area));\n            unclipArea(ctx);\n        }\n        elements.forEach((elem) => elem.draw.call(elem, ctx, area));\n    }\n    _resyncElements() {\n        ScatterController.prototype._resyncElements.call(this);\n        const meta = this._cachedMeta;\n        const edges = meta._parsedEdges;\n        const metaEdges = meta.edges || (meta.edges = []);\n        const numMeta = metaEdges.length;\n        const numData = edges.length;\n        if (numData < numMeta) {\n            metaEdges.splice(numData, numMeta - numData);\n            this._scheduleResyncLayout();\n        }\n        else if (numData > numMeta) {\n            this._insertEdgeElements(numMeta, numData - numMeta);\n        }\n    }\n    getTreeRootIndex() {\n        const ds = this.getDataset();\n        const nodes = ds.data;\n        if (ds.derivedEdges) {\n            return nodes.findIndex((d) => d.parent == null);\n        }\n        const edges = this._cachedMeta._parsedEdges || [];\n        const nodeIndices = new Set(nodes.map((_, i) => i));\n        edges.forEach((edge) => {\n            nodeIndices.delete(edge.target);\n        });\n        return Array.from(nodeIndices)[0];\n    }\n    getTreeRoot() {\n        const index = this.getTreeRootIndex();\n        const p = this.getParsed(index);\n        p.index = index;\n        return p;\n    }\n    getTreeChildren(node) {\n        var _a;\n        const edges = this._cachedMeta._parsedEdges;\n        const index = (_a = node.index) !== null && _a !== void 0 ? _a : 0;\n        return edges\n            .filter((d) => d.source === index)\n            .map((d) => {\n            const p = this.getParsed(d.target);\n            p.index = d.target;\n            return p;\n        });\n    }\n    _parseDefinedEdge(edge) {\n        const ds = this.getDataset();\n        const { data } = ds;\n        return {\n            source: this.resolveNodeIndex(data, edge.source),\n            target: this.resolveNodeIndex(data, edge.target),\n            points: [],\n        };\n    }\n    _parseEdges() {\n        const ds = this.getDataset();\n        const data = ds.data;\n        const meta = this._cachedMeta;\n        if (ds.edges) {\n            const edges = ds.edges.map((edge) => this._parseDefinedEdge(edge));\n            meta._parsedEdges = edges;\n            return edges;\n        }\n        const edges = [];\n        meta._parsedEdges = edges;\n        data.forEach((node, i) => {\n            if (node.parent != null) {\n                const parent = this.resolveNodeIndex(data, node.parent);\n                edges.push({\n                    source: parent,\n                    target: i,\n                    points: [],\n                });\n            }\n        });\n        return edges;\n    }\n    addElements() {\n        super.addElements();\n        const meta = this._cachedMeta;\n        const edges = this._parseEdges();\n        const metaData = new Array(edges.length);\n        meta.edges = metaData;\n        for (let i = 0; i < edges.length; i += 1) {\n            metaData[i] = new this.edgeElementType();\n        }\n    }\n    _resyncEdgeElements() {\n        const meta = this._cachedMeta;\n        const edges = this._parseEdges();\n        const metaData = meta.edges || (meta.edges = []);\n        for (let i = 0; i < edges.length; i += 1) {\n            metaData[i] = metaData[i] || new this.edgeElementType();\n        }\n        if (edges.length < metaData.length) {\n            metaData.splice(edges.length, metaData.length);\n        }\n    }\n    _insertElements(start, count) {\n        ScatterController.prototype._insertElements.call(this, start, count);\n        if (count > 0) {\n            this._resyncEdgeElements();\n        }\n    }\n    _removeElements(start, count) {\n        ScatterController.prototype._removeElements.call(this, start, count);\n        if (count > 0) {\n            this._resyncEdgeElements();\n        }\n    }\n    _insertEdgeElements(start, count) {\n        const elements = [];\n        for (let i = 0; i < count; i += 1) {\n            elements.push(new this.edgeElementType());\n        }\n        this._cachedMeta.edges.splice(start, 0, ...elements);\n        this.updateEdgeElements(elements, start, 'reset');\n        this._scheduleResyncLayout();\n    }\n    reLayout() {\n    }\n    resetLayout() {\n    }\n    stopLayout() {\n    }\n    _scheduleResyncLayout() {\n        if (this._scheduleResyncLayoutId != null && this._scheduleResyncLayoutId >= 0) {\n            return;\n        }\n        this._scheduleResyncLayoutId = requestAnimationFrame(() => {\n            this._scheduleResyncLayoutId = -1;\n            this.resyncLayout();\n        });\n    }\n    resyncLayout() {\n    }\n}\nGraphController.id = 'graph';\nGraphController.defaults = merge({}, [\n    ScatterController.defaults,\n    {\n        clip: 10,\n        animations: {\n            points: {\n                fn: interpolatePoints,\n                properties: ['points'],\n            },\n        },\n        edgeElementType: EdgeLine.id,\n    },\n]);\nGraphController.overrides = merge({}, [\n    ScatterController.overrides,\n    {\n        layout: {\n            padding: 10,\n        },\n        scales: {\n            x: {\n                display: false,\n                ticks: {\n                    maxTicksLimit: 2,\n                    precision: 100,\n                    minRotation: 0,\n                    maxRotation: 0,\n                },\n            },\n            y: {\n                display: false,\n                ticks: {\n                    maxTicksLimit: 2,\n                    precision: 100,\n                    minRotation: 0,\n                    maxRotation: 0,\n                },\n            },\n        },\n        plugins: {\n            tooltip: {\n                callbacks: {\n                    label(item) {\n                        var _a, _b;\n                        return (_b = (_a = item.chart.data) === null || _a === void 0 ? void 0 : _a.labels) === null || _b === void 0 ? void 0 : _b[item.dataIndex];\n                    },\n                },\n            },\n        },\n    },\n]);\nexport class GraphChart extends Chart {\n    constructor(item, config) {\n        super(item, patchController('graph', config, GraphController, [EdgeLine, PointElement], LinearScale));\n    }\n}\nGraphChart.id = GraphController.id;\n//# sourceMappingURL=GraphController.js.map","export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import { Chart, LinearScale, PointElement, } from 'chart.js';\nimport { merge } from 'chart.js/helpers';\nimport { forceCenter, forceCollide, forceLink, forceManyBody, forceRadial, forceSimulation, forceX, forceY, } from 'd3-force';\nimport { EdgeLine } from '../elements';\nimport { GraphController, } from './GraphController';\nimport patchController from './patchController';\nexport class ForceDirectedGraphController extends GraphController {\n    constructor(chart, datasetIndex) {\n        super(chart, datasetIndex);\n        this._simulation = forceSimulation()\n            .on('tick', () => {\n            this._copyPosition();\n            this.chart.render();\n        })\n            .on('end', () => {\n            this._copyPosition();\n            this.chart.render();\n            this.chart.update('default');\n        });\n        const sim = this.options.simulation;\n        const fs = {\n            center: forceCenter,\n            collide: forceCollide,\n            link: forceLink,\n            manyBody: forceManyBody,\n            x: forceX,\n            y: forceY,\n            radial: forceRadial,\n        };\n        Object.keys(fs).forEach((key) => {\n            const options = sim.forces[key];\n            if (!options) {\n                return;\n            }\n            const f = fs[key]();\n            if (typeof options !== 'boolean') {\n                Object.keys(options).forEach((attr) => {\n                    f[attr](options[attr]);\n                });\n            }\n            this._simulation.force(key, f);\n        });\n        this._simulation.stop();\n    }\n    _copyPosition() {\n        const nodes = this._cachedMeta._parsed;\n        const minmax = nodes.reduce((acc, v) => {\n            const s = v._sim;\n            if (!s || s.x == null || s.y == null) {\n                return acc;\n            }\n            if (s.x < acc.minX) {\n                acc.minX = s.x;\n            }\n            if (s.x > acc.maxX) {\n                acc.maxX = s.x;\n            }\n            if (s.y < acc.minY) {\n                acc.minY = s.y;\n            }\n            if (s.y > acc.maxY) {\n                acc.maxY = s.y;\n            }\n            return acc;\n        }, {\n            minX: Number.POSITIVE_INFINITY,\n            maxX: Number.NEGATIVE_INFINITY,\n            minY: Number.POSITIVE_INFINITY,\n            maxY: Number.NEGATIVE_INFINITY,\n        });\n        const rescaleX = (v) => ((v - minmax.minX) / (minmax.maxX - minmax.minX)) * 2 - 1;\n        const rescaleY = (v) => ((v - minmax.minY) / (minmax.maxY - minmax.minY)) * 2 - 1;\n        nodes.forEach((node) => {\n            var _a, _b;\n            if (node._sim) {\n                node.x = rescaleX((_a = node._sim.x) !== null && _a !== void 0 ? _a : 0);\n                node.y = rescaleY((_b = node._sim.y) !== null && _b !== void 0 ? _b : 0);\n            }\n        });\n        const { xScale, yScale } = this._cachedMeta;\n        const elems = this._cachedMeta.data;\n        elems.forEach((elem, i) => {\n            var _a, _b;\n            const parsed = nodes[i];\n            Object.assign(elem, {\n                x: (_a = xScale === null || xScale === void 0 ? void 0 : xScale.getPixelForValue(parsed.x, i)) !== null && _a !== void 0 ? _a : 0,\n                y: (_b = yScale === null || yScale === void 0 ? void 0 : yScale.getPixelForValue(parsed.y, i)) !== null && _b !== void 0 ? _b : 0,\n                skip: false,\n            });\n        });\n    }\n    resetLayout() {\n        super.resetLayout();\n        this._simulation.stop();\n        const nodes = this._cachedMeta._parsed.map((node, i) => {\n            const simNode = { ...node };\n            simNode.index = i;\n            node._sim = simNode;\n            if (!node.reset) {\n                return simNode;\n            }\n            delete simNode.x;\n            delete simNode.y;\n            delete simNode.vx;\n            delete simNode.vy;\n            return simNode;\n        });\n        this._simulation.nodes(nodes);\n        this._simulation.alpha(1).restart();\n    }\n    resyncLayout() {\n        super.resyncLayout();\n        this._simulation.stop();\n        const meta = this._cachedMeta;\n        const nodes = meta._parsed.map((node, i) => {\n            const simNode = { ...node };\n            simNode.index = i;\n            node._sim = simNode;\n            if (simNode.x === null) {\n                delete simNode.x;\n            }\n            if (simNode.y === null) {\n                delete simNode.y;\n            }\n            if (simNode.x == null && simNode.y == null) {\n                node.reset = true;\n            }\n            return simNode;\n        });\n        const link = this._simulation.force('link');\n        if (link) {\n            link.links([]);\n        }\n        this._simulation.nodes(nodes);\n        if (link) {\n            link.links((meta._parsedEdges || []).map((l) => ({ ...l })));\n        }\n        if (this.options.simulation.initialIterations > 0) {\n            this._simulation.alpha(1);\n            this._simulation.tick(this.options.simulation.initialIterations);\n            this._copyPosition();\n            if (this.options.simulation.autoRestart) {\n                this._simulation.restart();\n            }\n            else {\n                requestAnimationFrame(() => this.chart.update());\n            }\n        }\n        else if (this.options.simulation.autoRestart) {\n            this._simulation.alpha(1).restart();\n        }\n    }\n    reLayout() {\n        this._simulation.alpha(1).restart();\n    }\n    stopLayout() {\n        super.stopLayout();\n        this._simulation.stop();\n    }\n}\nForceDirectedGraphController.id = 'forceDirectedGraph';\nForceDirectedGraphController.defaults = merge({}, [\n    GraphController.defaults,\n    {\n        animation: false,\n        simulation: {\n            initialIterations: 0,\n            autoRestart: true,\n            forces: {\n                center: true,\n                collide: false,\n                link: true,\n                manyBody: true,\n                x: false,\n                y: false,\n                radial: false,\n            },\n        },\n    },\n]);\nForceDirectedGraphController.overrides = merge({}, [\n    GraphController.overrides,\n    {\n        scales: {\n            x: {\n                min: -1,\n                max: 1,\n            },\n            y: {\n                min: -1,\n                max: 1,\n            },\n        },\n    },\n]);\nexport class ForceDirectedGraphChart extends Chart {\n    constructor(item, config) {\n        super(item, patchController('forceDirectedGraph', config, ForceDirectedGraphController, [EdgeLine, PointElement], LinearScale));\n    }\n}\nForceDirectedGraphChart.id = ForceDirectedGraphController.id;\n//# sourceMappingURL=ForceDirectedGraphController.js.map","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import { Chart, LinearScale, PointElement, } from 'chart.js';\nimport { merge } from 'chart.js/helpers';\nimport { cluster, hierarchy, tree } from 'd3-hierarchy';\nimport { EdgeLine } from '../elements';\nimport { GraphController, } from './GraphController';\nimport patchController from './patchController';\nexport class DendrogramController extends GraphController {\n    updateEdgeElement(line, index, properties, mode) {\n        properties._orientation = this.options.tree.orientation;\n        super.updateEdgeElement(line, index, properties, mode);\n    }\n    updateElement(point, index, properties, mode) {\n        if (index != null) {\n            properties.angle = this.getParsed(index).angle;\n        }\n        super.updateElement(point, index, properties, mode);\n    }\n    resyncLayout() {\n        const meta = this._cachedMeta;\n        meta.root = hierarchy(this.getTreeRoot(), (d) => this.getTreeChildren(d))\n            .count()\n            .sort((a, b) => { var _a, _b; return b.height - a.height || ((_a = b.data.index) !== null && _a !== void 0 ? _a : 0) - ((_b = a.data.index) !== null && _b !== void 0 ? _b : 0); });\n        this.doLayout(meta.root);\n        super.resyncLayout();\n    }\n    reLayout(newOptions = {}) {\n        if (newOptions) {\n            Object.assign(this.options.tree, newOptions);\n            const ds = this.getDataset();\n            if (ds.tree) {\n                Object.assign(ds.tree, newOptions);\n            }\n            else {\n                ds.tree = newOptions;\n            }\n        }\n        this.doLayout(this._cachedMeta.root);\n    }\n    doLayout(root) {\n        const options = this.options.tree;\n        const layout = options.mode === 'tree'\n            ? tree()\n            : cluster();\n        if (options.orientation === 'radial') {\n            layout.size([Math.PI * 2, 1]);\n        }\n        else {\n            layout.size([2, 2]);\n        }\n        const orientation = {\n            horizontal: (d) => {\n                d.data.x = d.y - 1;\n                d.data.y = -d.x + 1;\n            },\n            vertical: (d) => {\n                d.data.x = d.x - 1;\n                d.data.y = -d.y + 1;\n            },\n            radial: (d) => {\n                d.data.x = Math.cos(d.x) * d.y;\n                d.data.y = Math.sin(d.x) * d.y;\n                d.data.angle = d.y === 0 ? Number.NaN : d.x;\n            },\n        };\n        layout(root).each((orientation[options.orientation] || orientation.horizontal));\n        requestAnimationFrame(() => this.chart.update());\n    }\n}\nDendrogramController.id = 'dendrogram';\nDendrogramController.defaults = merge({}, [\n    GraphController.defaults,\n    {\n        tree: {\n            mode: 'dendrogram',\n            orientation: 'horizontal',\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: ['x', 'y', 'angle', 'radius', 'rotation', 'borderWidth'],\n            },\n        },\n        tension: 0.4,\n    },\n]);\nDendrogramController.overrides = merge({}, [\n    GraphController.overrides,\n    {\n        scales: {\n            x: {\n                min: -1,\n                max: 1,\n            },\n            y: {\n                min: -1,\n                max: 1,\n            },\n        },\n    },\n]);\nexport class DendrogramChart extends Chart {\n    constructor(item, config) {\n        super(item, patchController('dendrogram', config, DendrogramController, [EdgeLine, PointElement], LinearScale));\n    }\n}\nDendrogramChart.id = DendrogramController.id;\nexport class DendogramController extends DendrogramController {\n}\nDendogramController.id = 'dendogram';\nDendogramController.defaults = merge({}, [\n    DendrogramController.defaults,\n    {\n        tree: {\n            mode: 'dendrogram',\n        },\n    },\n]);\nexport const DendogramChart = DendrogramChart;\n//# sourceMappingURL=DendrogramController.js.map","import { Chart, LinearScale, PointElement, } from 'chart.js';\nimport { merge } from 'chart.js/helpers';\nimport { EdgeLine } from '../elements';\nimport { DendrogramController } from './DendrogramController';\nimport patchController from './patchController';\nexport class TreeController extends DendrogramController {\n}\nTreeController.id = 'tree';\nTreeController.defaults = merge({}, [\n    DendrogramController.defaults,\n    {\n        tree: {\n            mode: 'tree',\n        },\n    },\n]);\nTreeController.overrides = DendrogramController.overrides;\nexport class TreeChart extends Chart {\n    constructor(item, config) {\n        super(item, patchController('tree', config, TreeController, [EdgeLine, PointElement], LinearScale));\n    }\n}\nTreeChart.id = TreeController.id;\n//# sourceMappingURL=TreeController.js.map","import { registry } from 'chart.js';\nimport { DendrogramController, DendogramController, ForceDirectedGraphController, GraphController, TreeController, } from './controllers';\nimport { EdgeLine } from './elements';\nexport * from '.';\nregistry.addControllers(DendrogramController, DendogramController, ForceDirectedGraphController, GraphController, TreeController);\nregistry.addElements(EdgeLine);\n//# sourceMappingURL=index.umd.js.map"],"names":["horizontal","from","to","options","fx","x","tension","fy","tx","ty","vertical","y","radial","angleHelper","Math","hypot","Number","isNaN","angle","cos","sin","EdgeLine","LineElement","draw","ctx","this","save","lineCap","borderCapStyle","setLineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","borderWidth","strokeStyle","borderColor","orientations","layout","_orientation","renderLine","shift","fromX","cpx","cpy","toX","stepped","midpoint","lineTo","bezierCurveTo","source","getProps","target","points","beginPath","moveTo","length","reduce","stroke","directed","s","arrowHeadSize","offset","arrowHeadOffset","translate","rotate","atan2","f","closePath","fillStyle","fill","restore","interpolateNumber","factor","patchController","type","config","controller","elements","scales","registry","addControllers","Array","isArray","addElements","addScales","c","id","defaults","defaultRoutes","descriptors","_scriptable","_indexable","name","GraphController","ScatterController","constructor","super","arguments","_scheduleResyncLayoutId","_edgeListener","_onDataPush","args","count","start","getDataset","edges","parsed","_cachedMeta","_parsedEdges","forEach","edge","push","_parseDefinedEdge","_insertEdgeElements","_onDataPop","pop","_scheduleResyncLayout","_onDataShift","_onDataSplice","splice","map","_onDataUnshift","unshift","initialize","_type","defaultConfig","datasets","edgeElementType","getElement","enableOptionSharing","parse","meta","data","_data","iScale","vScale","i","index","d","v","_parsed","_sorted","_dataLimitsCached","_parseEdges","reset","resetLayout","update","mode","updateEdgeElements","destroy","prototype","call","_edges","unlistenArrayEvents","stopLayout","_a","_b","_c","bak","_cachedDataOpts","dataElementType","_sharedOptions","_edgeSharedOptions","dataset","nodeElements","getContext","Proxy","get","obj","prop","getParsed","firstOpts","resolveDataElementOptions","dummyShared","sharedOptions","getSharedOptions","includeOptions","xScale","yScale","base","getBasePixel","copyPoint","point","getPixelForValue","properties","p","_source","updateEdgeElement","updateSharedOptions","Object","assign","updateElement","resolveNodeIndex","nodes","ref","chart","labels","indexOf","nIndex","console","warn","buildOrUpdateElements","isExtensible","listenArrayEvents","area","chartArea","_ctx","clipArea","unclipArea","elem","_resyncElements","metaEdges","numMeta","numData","getTreeRootIndex","ds","derivedEdges","findIndex","parent","nodeIndices","Set","_","delete","getTreeRoot","getTreeChildren","node","filter","metaData","_resyncEdgeElements","_insertElements","_removeElements","reLayout","requestAnimationFrame","resyncLayout","merge","clip","animations","fn","t","fromArray","undefined","interpolatorPoint","overrides","padding","display","ticks","maxTicksLimit","precision","minRotation","maxRotation","plugins","tooltip","callbacks","label","item","dataIndex","GraphChart","Chart","PointElement","LinearScale","forceCenter","strength","force","n","sx","sy","add","tree","xm","ym","xp","yp","right","bottom","j","_root","leaf","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","_y","next","Quad","defaultX","defaultY","quadtree","Quadtree","NaN","addAll","leaf_copy","copy","treeProto","constant","jiggle","random","vx","vy","forceCollide","radius","radii","iterations","xi","yi","ri","ri2","k","visitAfter","prepare","visit","apply","quad","rj","r","l","sqrt","_nodes","_random","find","nodeById","nodeId","Error","forceLink","links","strengths","distances","bias","link","min","distance","alpha","b","m","Map","initializeStrength","initializeDistance","child","cover","xz","yz","Infinity","floor","z","extent","x2","y2","q","x3","y3","quads","dx","dy","d2","remove","retainer","previous","removeAll","root","size","callback","noop","value","dispatch","test","Dispatch","set","slice","concat","on","typename","types","T","trim","split","hasOwnProperty","that","taskHead","taskTail","frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","bind","setTimeout","clearNow","Timer","_call","_time","_next","timer","delay","time","restart","wake","e","timerFlush","t0","t2","t1","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","stop","a","initialAngle","PI","forceSimulation","simulation","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","stepper","step","event","lcg","tick","initializeNodes","initializeForce","randomSource","closest","forceManyBody","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","w","distanceMin","distanceMax","theta","forceRadial","radiuses","forceX","forceY","ForceDirectedGraphController","datasetIndex","_simulation","_copyPosition","render","sim","fs","center","collide","manyBody","keys","key","attr","minmax","acc","_sim","minX","maxX","minY","maxY","POSITIVE_INFINITY","NEGATIVE_INFINITY","rescaleY","skip","simNode","initialIterations","autoRestart","animation","max","ForceDirectedGraphChart","defaultSeparation","meanXReduce","maxYReduce","cluster","separation","nodeSize","previousNode","eachAfter","children","meanX","left","leafLeft","leafRight","sum","hierarchy","mapChildren","objectChildren","childs","Node","depth","eachBefore","computeHeight","copyData","height","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","ancestor","TreeNode","A","treeRoot","firstWalk","secondWalk","sizeNode","kx","ky","siblings","executeShifts","vip","vop","vom","sip","sop","som","apportion","each","sort","compare","path","end","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","Symbol","iterator","current","reverse","create","DendrogramController","line","orientation","doLayout","newOptions","numbers","DendrogramChart","DendogramController","DendogramChart","TreeController","TreeChart"],"mappings":"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","x_google_ignoreList":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47]}