{"version":3,"file":"index.js","sources":["../src/elements/EdgeLine.ts","../src/controllers/interpolatePoints.ts","../src/controllers/patchController.ts","../src/controllers/GraphController.ts","../src/controllers/ForceDirectedGraphController.ts","../src/controllers/DendrogramController.ts","../src/controllers/TreeController.ts"],"sourcesContent":["import { LineElement, } from 'chart.js';\nfunction horizontal(from, to, options) {\n    return {\n        fx: (to.x - from.x) * options.tension,\n        fy: 0,\n        tx: (from.x - to.x) * options.tension,\n        ty: 0,\n    };\n}\nfunction vertical(from, to, options) {\n    return {\n        fx: 0,\n        fy: (to.y - from.y) * options.tension,\n        tx: 0,\n        ty: (from.y - to.y) * options.tension,\n    };\n}\nfunction radial(from, to, options) {\n    const angleHelper = Math.hypot(to.x - from.x, to.y - from.y) * options.tension;\n    return {\n        fx: Number.isNaN(from.angle) ? 0 : Math.cos(from.angle || 0) * angleHelper,\n        fy: Number.isNaN(from.angle) ? 0 : Math.sin(from.angle || 0) * -angleHelper,\n        tx: Number.isNaN(to.angle) ? 0 : Math.cos(to.angle || 0) * -angleHelper,\n        ty: Number.isNaN(to.angle) ? 0 : Math.sin(to.angle || 0) * angleHelper,\n    };\n}\nexport class EdgeLine extends LineElement {\n    draw(ctx) {\n        const { options } = this;\n        ctx.save();\n        ctx.lineCap = options.borderCapStyle;\n        ctx.setLineDash(options.borderDash || []);\n        ctx.lineDashOffset = options.borderDashOffset;\n        ctx.lineJoin = options.borderJoinStyle;\n        ctx.lineWidth = options.borderWidth;\n        ctx.strokeStyle = options.borderColor;\n        const orientations = {\n            horizontal,\n            vertical,\n            radial,\n        };\n        const layout = orientations[this._orientation] || orientations.horizontal;\n        const renderLine = (from, to) => {\n            const shift = layout(from, to, options);\n            const fromX = {\n                cpx: from.x + shift.fx,\n                cpy: from.y + shift.fy,\n            };\n            const toX = {\n                cpx: to.x + shift.tx,\n                cpy: to.y + shift.ty,\n            };\n            if (options.stepped === 'middle') {\n                const midpoint = (from.x + to.x) / 2.0;\n                ctx.lineTo(midpoint, from.y);\n                ctx.lineTo(midpoint, to.y);\n                ctx.lineTo(to.x, to.y);\n            }\n            else if (options.stepped === 'after') {\n                ctx.lineTo(from.x, to.y);\n                ctx.lineTo(to.x, to.y);\n            }\n            else if (options.stepped) {\n                ctx.lineTo(to.x, from.y);\n                ctx.lineTo(to.x, to.y);\n            }\n            else if (options.tension) {\n                ctx.bezierCurveTo(fromX.cpx, fromX.cpy, toX.cpx, toX.cpy, to.x, to.y);\n            }\n            else {\n                ctx.lineTo(to.x, to.y);\n            }\n            return to;\n        };\n        const source = this.source.getProps(['x', 'y', 'angle']);\n        const target = this.target.getProps(['x', 'y', 'angle']);\n        const points = this.getProps(['points']).points;\n        ctx.beginPath();\n        let from = source;\n        ctx.moveTo(from.x, from.y);\n        if (points && points.length > 0) {\n            from = points.reduce(renderLine, from);\n        }\n        renderLine(from, target);\n        ctx.stroke();\n        if (options.directed) {\n            const to = target;\n            const shift = layout(from, to, options);\n            const s = options.arrowHeadSize;\n            const offset = options.arrowHeadOffset;\n            ctx.save();\n            ctx.translate(to.x, target.y);\n            if (options.stepped === 'middle') {\n                const midpoint = (from.x + to.x) / 2.0;\n                ctx.rotate(Math.atan2(to.y - to.y, to.x - midpoint));\n            }\n            else if (options.stepped === 'after') {\n                ctx.rotate(Math.atan2(to.y - to.y, to.x - from.x));\n            }\n            else if (options.stepped) {\n                ctx.rotate(Math.atan2(to.y - from.y, to.x - to.x));\n            }\n            else if (options.tension) {\n                const toX = {\n                    x: to.x + shift.tx,\n                    y: to.y + shift.ty,\n                };\n                const f = 0.1;\n                ctx.rotate(Math.atan2(to.y - toX.y * (1 - f) - from.y * f, to.x - toX.x * (1 - f) - from.x * f));\n            }\n            else {\n                ctx.rotate(Math.atan2(to.y - from.y, to.x - from.x));\n            }\n            ctx.translate(-offset, 0);\n            ctx.beginPath();\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-s, -s / 2);\n            ctx.lineTo(-s * 0.9, 0);\n            ctx.lineTo(-s, s / 2);\n            ctx.closePath();\n            ctx.fillStyle = ctx.strokeStyle;\n            ctx.fill();\n            ctx.restore();\n        }\n        ctx.restore();\n    }\n}\nEdgeLine.id = 'edgeLine';\nEdgeLine.defaults = {\n    ...LineElement.defaults,\n    tension: 0,\n    directed: false,\n    arrowHeadSize: 15,\n    arrowHeadOffset: 5,\n};\nEdgeLine.defaultRoutes = LineElement.defaultRoutes;\nEdgeLine.descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash',\n};\n//# sourceMappingURL=EdgeLine.js.map","function interpolateNumber(from, to, factor) {\n    if (from === to) {\n        return to;\n    }\n    return from + (to - from) * factor;\n}\nfunction interpolatorPoint(fromArray, i, to, factor) {\n    const from = fromArray[i] || fromArray[i - 1] || fromArray._source;\n    if (!from) {\n        return to;\n    }\n    const x = interpolateNumber(from.x, to.x, factor);\n    const y = interpolateNumber(from.y, to.y, factor);\n    const angle = Number.isNaN(from.angle) ? interpolateNumber(from.angle, to.angle, factor) : undefined;\n    return { x, y, angle };\n}\nexport default function interpolatePoints(from, to, factor) {\n    if (Array.isArray(from) && Array.isArray(to) && to.length > 0) {\n        return to.map((t, i) => interpolatorPoint(from, i, t, factor));\n    }\n    return to;\n}\n//# sourceMappingURL=interpolatePoints.js.map","import { registry } from 'chart.js';\nexport default function patchController(type, config, controller, elements = [], scales = []) {\n    registry.addControllers(controller);\n    if (Array.isArray(elements)) {\n        registry.addElements(...elements);\n    }\n    else {\n        registry.addElements(elements);\n    }\n    if (Array.isArray(scales)) {\n        registry.addScales(...scales);\n    }\n    else {\n        registry.addScales(scales);\n    }\n    const c = config;\n    c.type = type;\n    return c;\n}\n//# sourceMappingURL=patchController.js.map","import { defaults, Chart, ScatterController, registry, LinearScale, PointElement, } from 'chart.js';\nimport { merge, clipArea, unclipArea, listenArrayEvents, unlistenArrayEvents } from 'chart.js/helpers';\nimport { EdgeLine } from '../elements';\nimport interpolatePoints from './interpolatePoints';\nimport patchController from './patchController';\nexport class GraphController extends ScatterController {\n    constructor() {\n        super(...arguments);\n        this._scheduleResyncLayoutId = -1;\n        this._edgeListener = {\n            _onDataPush: (...args) => {\n                const count = args.length;\n                const start = this.getDataset().edges.length - count;\n                const parsed = this._cachedMeta._parsedEdges;\n                args.forEach((edge) => {\n                    parsed.push(this._parseDefinedEdge(edge));\n                });\n                this._insertEdgeElements(start, count);\n            },\n            _onDataPop: () => {\n                this._cachedMeta.edges.pop();\n                this._cachedMeta._parsedEdges.pop();\n                this._scheduleResyncLayout();\n            },\n            _onDataShift: () => {\n                this._cachedMeta.edges.shift();\n                this._cachedMeta._parsedEdges.shift();\n                this._scheduleResyncLayout();\n            },\n            _onDataSplice: (start, count, ...args) => {\n                this._cachedMeta.edges.splice(start, count);\n                this._cachedMeta._parsedEdges.splice(start, count);\n                if (args.length > 0) {\n                    const parsed = this._cachedMeta._parsedEdges;\n                    parsed.splice(start, 0, ...args.map((edge) => this._parseDefinedEdge(edge)));\n                    this._insertEdgeElements(start, args.length);\n                }\n                else {\n                    this._scheduleResyncLayout();\n                }\n            },\n            _onDataUnshift: (...args) => {\n                const parsed = this._cachedMeta._parsedEdges;\n                parsed.unshift(...args.map((edge) => this._parseDefinedEdge(edge)));\n                this._insertEdgeElements(0, args.length);\n            },\n        };\n    }\n    initialize() {\n        const type = this._type;\n        const defaultConfig = defaults.datasets[type];\n        this.edgeElementType = registry.getElement(defaultConfig.edgeElementType);\n        super.initialize();\n        this.enableOptionSharing = true;\n        this._scheduleResyncLayout();\n    }\n    parse(start, count) {\n        const meta = this._cachedMeta;\n        const data = this._data;\n        const { iScale, vScale } = meta;\n        for (let i = 0; i < count; i += 1) {\n            const index = i + start;\n            const d = data[index];\n            const v = (meta._parsed[index] || {});\n            if (d && typeof d.x === 'number') {\n                v.x = d.x;\n            }\n            if (d && typeof d.y === 'number') {\n                v.y = d.y;\n            }\n            meta._parsed[index] = v;\n        }\n        if (meta._parsed.length > data.length) {\n            meta._parsed.splice(data.length, meta._parsed.length - data.length);\n        }\n        this._cachedMeta._sorted = false;\n        iScale._dataLimitsCached = false;\n        vScale._dataLimitsCached = false;\n        this._parseEdges();\n    }\n    reset() {\n        this.resetLayout();\n        super.reset();\n    }\n    update(mode) {\n        super.update(mode);\n        const meta = this._cachedMeta;\n        const edges = meta.edges || [];\n        this.updateEdgeElements(edges, 0, mode);\n    }\n    destroy() {\n        ScatterController.prototype.destroy.call(this);\n        if (this._edges) {\n            unlistenArrayEvents(this._edges, this._edgeListener);\n        }\n        this.stopLayout();\n    }\n    updateEdgeElements(edges, start, mode) {\n        var _a, _b, _c;\n        const bak = {\n            _cachedDataOpts: this._cachedDataOpts,\n            dataElementType: this.dataElementType,\n            _sharedOptions: this._sharedOptions,\n        };\n        this._cachedDataOpts = {};\n        this.dataElementType = this.edgeElementType;\n        this._sharedOptions = this._edgeSharedOptions;\n        const dataset = this.getDataset();\n        const meta = this._cachedMeta;\n        const nodeElements = meta.data;\n        const data = this._cachedMeta._parsedEdges;\n        this.getContext(-1, false, mode);\n        this.getDataset = () => {\n            return new Proxy(dataset, {\n                get(obj, prop) {\n                    var _a;\n                    return prop === 'data' ? (_a = obj.edges) !== null && _a !== void 0 ? _a : [] : obj[prop];\n                },\n            });\n        };\n        this.getParsed = (index) => {\n            return data[index];\n        };\n        meta.data = meta.edges;\n        const reset = mode === 'reset';\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const dummyShared = {};\n        const sharedOptions = (_a = this.getSharedOptions(firstOpts)) !== null && _a !== void 0 ? _a : dummyShared;\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const { xScale, yScale } = meta;\n        const base = {\n            x: (_b = xScale === null || xScale === void 0 ? void 0 : xScale.getBasePixel()) !== null && _b !== void 0 ? _b : 0,\n            y: (_c = yScale === null || yScale === void 0 ? void 0 : yScale.getBasePixel()) !== null && _c !== void 0 ? _c : 0,\n        };\n        function copyPoint(point) {\n            var _a, _b;\n            const x = reset ? base.x : (_a = xScale === null || xScale === void 0 ? void 0 : xScale.getPixelForValue(point.x, 0)) !== null && _a !== void 0 ? _a : 0;\n            const y = reset ? base.y : (_b = yScale === null || yScale === void 0 ? void 0 : yScale.getPixelForValue(point.y, 0)) !== null && _b !== void 0 ? _b : 0;\n            return {\n                x,\n                y,\n                angle: point.angle,\n            };\n        }\n        for (let i = 0; i < edges.length; i += 1) {\n            const edge = edges[i];\n            const index = start + i;\n            const parsed = data[index];\n            const properties = {\n                source: nodeElements[parsed.source],\n                target: nodeElements[parsed.target],\n                points: Array.isArray(parsed.points) ? parsed.points.map((p) => copyPoint(p)) : [],\n            };\n            properties.points._source = nodeElements[parsed.source];\n            if (includeOptions) {\n                if (sharedOptions !== dummyShared) {\n                    properties.options = sharedOptions;\n                }\n                else {\n                    properties.options = this.resolveDataElementOptions(index, mode);\n                }\n            }\n            this.updateEdgeElement(edge, index, properties, mode);\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        this._edgeSharedOptions = this._sharedOptions;\n        Object.assign(this, bak);\n        delete this.getDataset;\n        delete this.getParsed;\n        meta.data = nodeElements;\n    }\n    updateEdgeElement(edge, index, properties, mode) {\n        super.updateElement(edge, index, properties, mode);\n    }\n    updateElement(point, index, properties, mode) {\n        var _a;\n        if (mode === 'reset') {\n            const { xScale } = this._cachedMeta;\n            properties.x = (_a = xScale === null || xScale === void 0 ? void 0 : xScale.getBasePixel()) !== null && _a !== void 0 ? _a : 0;\n        }\n        super.updateElement(point, index, properties, mode);\n    }\n    resolveNodeIndex(nodes, ref) {\n        if (typeof ref === 'number') {\n            return ref;\n        }\n        if (typeof ref === 'string') {\n            const labels = this.chart.data.labels;\n            return labels.indexOf(ref);\n        }\n        const nIndex = nodes.indexOf(ref);\n        if (nIndex >= 0) {\n            return nIndex;\n        }\n        const data = this.getDataset().data;\n        const index = data.indexOf(ref);\n        if (index >= 0) {\n            return index;\n        }\n        console.warn('cannot resolve edge ref', ref);\n        return -1;\n    }\n    buildOrUpdateElements() {\n        const dataset = this.getDataset();\n        const edges = dataset.edges || [];\n        if (this._edges !== edges) {\n            if (this._edges) {\n                unlistenArrayEvents(this._edges, this._edgeListener);\n            }\n            if (edges && Object.isExtensible(edges)) {\n                listenArrayEvents(edges, this._edgeListener);\n            }\n            this._edges = edges;\n        }\n        super.buildOrUpdateElements();\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const edges = this._cachedMeta.edges || [];\n        const elements = (meta.data || []);\n        const area = this.chart.chartArea;\n        const ctx = this._ctx;\n        if (edges.length > 0) {\n            clipArea(ctx, area);\n            edges.forEach((edge) => edge.draw.call(edge, ctx, area));\n            unclipArea(ctx);\n        }\n        elements.forEach((elem) => elem.draw.call(elem, ctx, area));\n    }\n    _resyncElements() {\n        ScatterController.prototype._resyncElements.call(this);\n        const meta = this._cachedMeta;\n        const edges = meta._parsedEdges;\n        const metaEdges = meta.edges || (meta.edges = []);\n        const numMeta = metaEdges.length;\n        const numData = edges.length;\n        if (numData < numMeta) {\n            metaEdges.splice(numData, numMeta - numData);\n            this._scheduleResyncLayout();\n        }\n        else if (numData > numMeta) {\n            this._insertEdgeElements(numMeta, numData - numMeta);\n        }\n    }\n    getTreeRootIndex() {\n        const ds = this.getDataset();\n        const nodes = ds.data;\n        if (ds.derivedEdges) {\n            return nodes.findIndex((d) => d.parent == null);\n        }\n        const edges = this._cachedMeta._parsedEdges || [];\n        const nodeIndices = new Set(nodes.map((_, i) => i));\n        edges.forEach((edge) => {\n            nodeIndices.delete(edge.target);\n        });\n        return Array.from(nodeIndices)[0];\n    }\n    getTreeRoot() {\n        const index = this.getTreeRootIndex();\n        const p = this.getParsed(index);\n        p.index = index;\n        return p;\n    }\n    getTreeChildren(node) {\n        var _a;\n        const edges = this._cachedMeta._parsedEdges;\n        const index = (_a = node.index) !== null && _a !== void 0 ? _a : 0;\n        return edges\n            .filter((d) => d.source === index)\n            .map((d) => {\n            const p = this.getParsed(d.target);\n            p.index = d.target;\n            return p;\n        });\n    }\n    _parseDefinedEdge(edge) {\n        const ds = this.getDataset();\n        const { data } = ds;\n        return {\n            source: this.resolveNodeIndex(data, edge.source),\n            target: this.resolveNodeIndex(data, edge.target),\n            points: [],\n        };\n    }\n    _parseEdges() {\n        const ds = this.getDataset();\n        const data = ds.data;\n        const meta = this._cachedMeta;\n        if (ds.edges) {\n            const edges = ds.edges.map((edge) => this._parseDefinedEdge(edge));\n            meta._parsedEdges = edges;\n            return edges;\n        }\n        const edges = [];\n        meta._parsedEdges = edges;\n        data.forEach((node, i) => {\n            if (node.parent != null) {\n                const parent = this.resolveNodeIndex(data, node.parent);\n                edges.push({\n                    source: parent,\n                    target: i,\n                    points: [],\n                });\n            }\n        });\n        return edges;\n    }\n    addElements() {\n        super.addElements();\n        const meta = this._cachedMeta;\n        const edges = this._parseEdges();\n        const metaData = new Array(edges.length);\n        meta.edges = metaData;\n        for (let i = 0; i < edges.length; i += 1) {\n            metaData[i] = new this.edgeElementType();\n        }\n    }\n    _resyncEdgeElements() {\n        const meta = this._cachedMeta;\n        const edges = this._parseEdges();\n        const metaData = meta.edges || (meta.edges = []);\n        for (let i = 0; i < edges.length; i += 1) {\n            metaData[i] = metaData[i] || new this.edgeElementType();\n        }\n        if (edges.length < metaData.length) {\n            metaData.splice(edges.length, metaData.length);\n        }\n    }\n    _insertElements(start, count) {\n        ScatterController.prototype._insertElements.call(this, start, count);\n        if (count > 0) {\n            this._resyncEdgeElements();\n        }\n    }\n    _removeElements(start, count) {\n        ScatterController.prototype._removeElements.call(this, start, count);\n        if (count > 0) {\n            this._resyncEdgeElements();\n        }\n    }\n    _insertEdgeElements(start, count) {\n        const elements = [];\n        for (let i = 0; i < count; i += 1) {\n            elements.push(new this.edgeElementType());\n        }\n        this._cachedMeta.edges.splice(start, 0, ...elements);\n        this.updateEdgeElements(elements, start, 'reset');\n        this._scheduleResyncLayout();\n    }\n    reLayout() {\n    }\n    resetLayout() {\n    }\n    stopLayout() {\n    }\n    _scheduleResyncLayout() {\n        if (this._scheduleResyncLayoutId != null && this._scheduleResyncLayoutId >= 0) {\n            return;\n        }\n        this._scheduleResyncLayoutId = requestAnimationFrame(() => {\n            this._scheduleResyncLayoutId = -1;\n            this.resyncLayout();\n        });\n    }\n    resyncLayout() {\n    }\n}\nGraphController.id = 'graph';\nGraphController.defaults = merge({}, [\n    ScatterController.defaults,\n    {\n        clip: 10,\n        animations: {\n            points: {\n                fn: interpolatePoints,\n                properties: ['points'],\n            },\n        },\n        edgeElementType: EdgeLine.id,\n    },\n]);\nGraphController.overrides = merge({}, [\n    ScatterController.overrides,\n    {\n        layout: {\n            padding: 10,\n        },\n        scales: {\n            x: {\n                display: false,\n                ticks: {\n                    maxTicksLimit: 2,\n                    precision: 100,\n                    minRotation: 0,\n                    maxRotation: 0,\n                },\n            },\n            y: {\n                display: false,\n                ticks: {\n                    maxTicksLimit: 2,\n                    precision: 100,\n                    minRotation: 0,\n                    maxRotation: 0,\n                },\n            },\n        },\n        plugins: {\n            tooltip: {\n                callbacks: {\n                    label(item) {\n                        var _a, _b;\n                        return (_b = (_a = item.chart.data) === null || _a === void 0 ? void 0 : _a.labels) === null || _b === void 0 ? void 0 : _b[item.dataIndex];\n                    },\n                },\n            },\n        },\n    },\n]);\nexport class GraphChart extends Chart {\n    constructor(item, config) {\n        super(item, patchController('graph', config, GraphController, [EdgeLine, PointElement], LinearScale));\n    }\n}\nGraphChart.id = GraphController.id;\n//# sourceMappingURL=GraphController.js.map","import { Chart, LinearScale, PointElement, } from 'chart.js';\nimport { merge } from 'chart.js/helpers';\nimport { forceCenter, forceCollide, forceLink, forceManyBody, forceRadial, forceSimulation, forceX, forceY, } from 'd3-force';\nimport { EdgeLine } from '../elements';\nimport { GraphController, } from './GraphController';\nimport patchController from './patchController';\nexport class ForceDirectedGraphController extends GraphController {\n    constructor(chart, datasetIndex) {\n        super(chart, datasetIndex);\n        this._simulation = forceSimulation()\n            .on('tick', () => {\n            this._copyPosition();\n            this.chart.render();\n        })\n            .on('end', () => {\n            this._copyPosition();\n            this.chart.render();\n            this.chart.update('default');\n        });\n        const sim = this.options.simulation;\n        const fs = {\n            center: forceCenter,\n            collide: forceCollide,\n            link: forceLink,\n            manyBody: forceManyBody,\n            x: forceX,\n            y: forceY,\n            radial: forceRadial,\n        };\n        Object.keys(fs).forEach((key) => {\n            const options = sim.forces[key];\n            if (!options) {\n                return;\n            }\n            const f = fs[key]();\n            if (typeof options !== 'boolean') {\n                Object.keys(options).forEach((attr) => {\n                    f[attr](options[attr]);\n                });\n            }\n            this._simulation.force(key, f);\n        });\n        this._simulation.stop();\n    }\n    _copyPosition() {\n        const nodes = this._cachedMeta._parsed;\n        const minmax = nodes.reduce((acc, v) => {\n            const s = v._sim;\n            if (!s || s.x == null || s.y == null) {\n                return acc;\n            }\n            if (s.x < acc.minX) {\n                acc.minX = s.x;\n            }\n            if (s.x > acc.maxX) {\n                acc.maxX = s.x;\n            }\n            if (s.y < acc.minY) {\n                acc.minY = s.y;\n            }\n            if (s.y > acc.maxY) {\n                acc.maxY = s.y;\n            }\n            return acc;\n        }, {\n            minX: Number.POSITIVE_INFINITY,\n            maxX: Number.NEGATIVE_INFINITY,\n            minY: Number.POSITIVE_INFINITY,\n            maxY: Number.NEGATIVE_INFINITY,\n        });\n        const rescaleX = (v) => ((v - minmax.minX) / (minmax.maxX - minmax.minX)) * 2 - 1;\n        const rescaleY = (v) => ((v - minmax.minY) / (minmax.maxY - minmax.minY)) * 2 - 1;\n        nodes.forEach((node) => {\n            var _a, _b;\n            if (node._sim) {\n                node.x = rescaleX((_a = node._sim.x) !== null && _a !== void 0 ? _a : 0);\n                node.y = rescaleY((_b = node._sim.y) !== null && _b !== void 0 ? _b : 0);\n            }\n        });\n        const { xScale, yScale } = this._cachedMeta;\n        const elems = this._cachedMeta.data;\n        elems.forEach((elem, i) => {\n            var _a, _b;\n            const parsed = nodes[i];\n            Object.assign(elem, {\n                x: (_a = xScale === null || xScale === void 0 ? void 0 : xScale.getPixelForValue(parsed.x, i)) !== null && _a !== void 0 ? _a : 0,\n                y: (_b = yScale === null || yScale === void 0 ? void 0 : yScale.getPixelForValue(parsed.y, i)) !== null && _b !== void 0 ? _b : 0,\n                skip: false,\n            });\n        });\n    }\n    resetLayout() {\n        super.resetLayout();\n        this._simulation.stop();\n        const nodes = this._cachedMeta._parsed.map((node, i) => {\n            const simNode = { ...node };\n            simNode.index = i;\n            node._sim = simNode;\n            if (!node.reset) {\n                return simNode;\n            }\n            delete simNode.x;\n            delete simNode.y;\n            delete simNode.vx;\n            delete simNode.vy;\n            return simNode;\n        });\n        this._simulation.nodes(nodes);\n        this._simulation.alpha(1).restart();\n    }\n    resyncLayout() {\n        super.resyncLayout();\n        this._simulation.stop();\n        const meta = this._cachedMeta;\n        const nodes = meta._parsed.map((node, i) => {\n            const simNode = { ...node };\n            simNode.index = i;\n            node._sim = simNode;\n            if (simNode.x === null) {\n                delete simNode.x;\n            }\n            if (simNode.y === null) {\n                delete simNode.y;\n            }\n            if (simNode.x == null && simNode.y == null) {\n                node.reset = true;\n            }\n            return simNode;\n        });\n        const link = this._simulation.force('link');\n        if (link) {\n            link.links([]);\n        }\n        this._simulation.nodes(nodes);\n        if (link) {\n            link.links((meta._parsedEdges || []).map((l) => ({ ...l })));\n        }\n        if (this.options.simulation.initialIterations > 0) {\n            this._simulation.alpha(1);\n            this._simulation.tick(this.options.simulation.initialIterations);\n            this._copyPosition();\n            if (this.options.simulation.autoRestart) {\n                this._simulation.restart();\n            }\n            else {\n                requestAnimationFrame(() => this.chart.update());\n            }\n        }\n        else if (this.options.simulation.autoRestart) {\n            this._simulation.alpha(1).restart();\n        }\n    }\n    reLayout() {\n        this._simulation.alpha(1).restart();\n    }\n    stopLayout() {\n        super.stopLayout();\n        this._simulation.stop();\n    }\n}\nForceDirectedGraphController.id = 'forceDirectedGraph';\nForceDirectedGraphController.defaults = merge({}, [\n    GraphController.defaults,\n    {\n        animation: false,\n        simulation: {\n            initialIterations: 0,\n            autoRestart: true,\n            forces: {\n                center: true,\n                collide: false,\n                link: true,\n                manyBody: true,\n                x: false,\n                y: false,\n                radial: false,\n            },\n        },\n    },\n]);\nForceDirectedGraphController.overrides = merge({}, [\n    GraphController.overrides,\n    {\n        scales: {\n            x: {\n                min: -1,\n                max: 1,\n            },\n            y: {\n                min: -1,\n                max: 1,\n            },\n        },\n    },\n]);\nexport class ForceDirectedGraphChart extends Chart {\n    constructor(item, config) {\n        super(item, patchController('forceDirectedGraph', config, ForceDirectedGraphController, [EdgeLine, PointElement], LinearScale));\n    }\n}\nForceDirectedGraphChart.id = ForceDirectedGraphController.id;\n//# sourceMappingURL=ForceDirectedGraphController.js.map","import { Chart, LinearScale, PointElement, } from 'chart.js';\nimport { merge } from 'chart.js/helpers';\nimport { cluster, hierarchy, tree } from 'd3-hierarchy';\nimport { EdgeLine } from '../elements';\nimport { GraphController, } from './GraphController';\nimport patchController from './patchController';\nexport class DendrogramController extends GraphController {\n    updateEdgeElement(line, index, properties, mode) {\n        properties._orientation = this.options.tree.orientation;\n        super.updateEdgeElement(line, index, properties, mode);\n    }\n    updateElement(point, index, properties, mode) {\n        if (index != null) {\n            properties.angle = this.getParsed(index).angle;\n        }\n        super.updateElement(point, index, properties, mode);\n    }\n    resyncLayout() {\n        const meta = this._cachedMeta;\n        meta.root = hierarchy(this.getTreeRoot(), (d) => this.getTreeChildren(d))\n            .count()\n            .sort((a, b) => { var _a, _b; return b.height - a.height || ((_a = b.data.index) !== null && _a !== void 0 ? _a : 0) - ((_b = a.data.index) !== null && _b !== void 0 ? _b : 0); });\n        this.doLayout(meta.root);\n        super.resyncLayout();\n    }\n    reLayout(newOptions = {}) {\n        if (newOptions) {\n            Object.assign(this.options.tree, newOptions);\n            const ds = this.getDataset();\n            if (ds.tree) {\n                Object.assign(ds.tree, newOptions);\n            }\n            else {\n                ds.tree = newOptions;\n            }\n        }\n        this.doLayout(this._cachedMeta.root);\n    }\n    doLayout(root) {\n        const options = this.options.tree;\n        const layout = options.mode === 'tree'\n            ? tree()\n            : cluster();\n        if (options.orientation === 'radial') {\n            layout.size([Math.PI * 2, 1]);\n        }\n        else {\n            layout.size([2, 2]);\n        }\n        const orientation = {\n            horizontal: (d) => {\n                d.data.x = d.y - 1;\n                d.data.y = -d.x + 1;\n            },\n            vertical: (d) => {\n                d.data.x = d.x - 1;\n                d.data.y = -d.y + 1;\n            },\n            radial: (d) => {\n                d.data.x = Math.cos(d.x) * d.y;\n                d.data.y = Math.sin(d.x) * d.y;\n                d.data.angle = d.y === 0 ? Number.NaN : d.x;\n            },\n        };\n        layout(root).each((orientation[options.orientation] || orientation.horizontal));\n        requestAnimationFrame(() => this.chart.update());\n    }\n}\nDendrogramController.id = 'dendrogram';\nDendrogramController.defaults = merge({}, [\n    GraphController.defaults,\n    {\n        tree: {\n            mode: 'dendrogram',\n            orientation: 'horizontal',\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: ['x', 'y', 'angle', 'radius', 'rotation', 'borderWidth'],\n            },\n        },\n        tension: 0.4,\n    },\n]);\nDendrogramController.overrides = merge({}, [\n    GraphController.overrides,\n    {\n        scales: {\n            x: {\n                min: -1,\n                max: 1,\n            },\n            y: {\n                min: -1,\n                max: 1,\n            },\n        },\n    },\n]);\nexport class DendrogramChart extends Chart {\n    constructor(item, config) {\n        super(item, patchController('dendrogram', config, DendrogramController, [EdgeLine, PointElement], LinearScale));\n    }\n}\nDendrogramChart.id = DendrogramController.id;\nexport class DendogramController extends DendrogramController {\n}\nDendogramController.id = 'dendogram';\nDendogramController.defaults = merge({}, [\n    DendrogramController.defaults,\n    {\n        tree: {\n            mode: 'dendrogram',\n        },\n    },\n]);\nexport const DendogramChart = DendrogramChart;\n//# sourceMappingURL=DendrogramController.js.map","import { Chart, LinearScale, PointElement, } from 'chart.js';\nimport { merge } from 'chart.js/helpers';\nimport { EdgeLine } from '../elements';\nimport { DendrogramController } from './DendrogramController';\nimport patchController from './patchController';\nexport class TreeController extends DendrogramController {\n}\nTreeController.id = 'tree';\nTreeController.defaults = merge({}, [\n    DendrogramController.defaults,\n    {\n        tree: {\n            mode: 'tree',\n        },\n    },\n]);\nTreeController.overrides = DendrogramController.overrides;\nexport class TreeChart extends Chart {\n    constructor(item, config) {\n        super(item, patchController('tree', config, TreeController, [EdgeLine, PointElement], LinearScale));\n    }\n}\nTreeChart.id = TreeController.id;\n//# sourceMappingURL=TreeController.js.map"],"names":[],"mappings":"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"}