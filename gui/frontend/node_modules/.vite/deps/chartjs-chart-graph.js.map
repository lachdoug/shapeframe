{
  "version": 3,
  "sources": ["../../d3-force/src/center.js", "../../d3-quadtree/src/add.js", "../../d3-quadtree/src/cover.js", "../../d3-quadtree/src/data.js", "../../d3-quadtree/src/extent.js", "../../d3-quadtree/src/quad.js", "../../d3-quadtree/src/find.js", "../../d3-quadtree/src/remove.js", "../../d3-quadtree/src/root.js", "../../d3-quadtree/src/size.js", "../../d3-quadtree/src/visit.js", "../../d3-quadtree/src/visitAfter.js", "../../d3-quadtree/src/x.js", "../../d3-quadtree/src/y.js", "../../d3-quadtree/src/quadtree.js", "../../d3-force/src/constant.js", "../../d3-force/src/jiggle.js", "../../d3-force/src/collide.js", "../../d3-force/src/link.js", "../../d3-dispatch/src/dispatch.js", "../../d3-timer/src/timer.js", "../../d3-force/src/lcg.js", "../../d3-force/src/simulation.js", "../../d3-force/src/manyBody.js", "../../d3-force/src/radial.js", "../../d3-force/src/x.js", "../../d3-force/src/y.js", "../../d3-hierarchy/src/cluster.js", "../../d3-hierarchy/src/hierarchy/count.js", "../../d3-hierarchy/src/hierarchy/each.js", "../../d3-hierarchy/src/hierarchy/eachBefore.js", "../../d3-hierarchy/src/hierarchy/eachAfter.js", "../../d3-hierarchy/src/hierarchy/find.js", "../../d3-hierarchy/src/hierarchy/sum.js", "../../d3-hierarchy/src/hierarchy/sort.js", "../../d3-hierarchy/src/hierarchy/path.js", "../../d3-hierarchy/src/hierarchy/ancestors.js", "../../d3-hierarchy/src/hierarchy/descendants.js", "../../d3-hierarchy/src/hierarchy/leaves.js", "../../d3-hierarchy/src/hierarchy/links.js", "../../d3-hierarchy/src/hierarchy/iterator.js", "../../d3-hierarchy/src/hierarchy/index.js", "../../d3-hierarchy/src/treemap/dice.js", "../../d3-hierarchy/src/tree.js", "../../d3-hierarchy/src/treemap/slice.js", "../../d3-hierarchy/src/treemap/squarify.js", "../../d3-hierarchy/src/treemap/resquarify.js", "../../chartjs-chart-graph/src/elements/EdgeLine.ts", "../../chartjs-chart-graph/src/controllers/interpolatePoints.ts", "../../chartjs-chart-graph/src/controllers/patchController.ts", "../../chartjs-chart-graph/src/controllers/GraphController.ts", "../../chartjs-chart-graph/src/controllers/ForceDirectedGraphController.ts", "../../chartjs-chart-graph/src/controllers/DendrogramController.ts", "../../chartjs-chart-graph/src/controllers/TreeController.ts"],
  "sourcesContent": ["export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n", "export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n", "export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n", "export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n", "export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n", "export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n", "export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n", "export default function() {\n  return this._root;\n}\n", "export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n", "export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n", "export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n", "import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n", "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n", "import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n", "import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n", "var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n", "var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n", "// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n", "import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n", "import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n", "import constant from \"./constant.js\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n", "import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n", "import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n", "function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n", "function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n", "export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n", "export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n", "export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n", "export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n", "export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n", "export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n", "export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n", "export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n", "export default function() {\n  return Array.from(this);\n}\n", "export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n", "export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n", "export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n", "import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n", "export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n", "import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n", "export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n", "import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n", "import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\nimport {phi, squarifyRatio} from \"./squarify.js\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);\n        else treemapSlice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n", "import { LineElement, } from 'chart.js';\nfunction horizontal(from, to, options) {\n    return {\n        fx: (to.x - from.x) * options.tension,\n        fy: 0,\n        tx: (from.x - to.x) * options.tension,\n        ty: 0,\n    };\n}\nfunction vertical(from, to, options) {\n    return {\n        fx: 0,\n        fy: (to.y - from.y) * options.tension,\n        tx: 0,\n        ty: (from.y - to.y) * options.tension,\n    };\n}\nfunction radial(from, to, options) {\n    const angleHelper = Math.hypot(to.x - from.x, to.y - from.y) * options.tension;\n    return {\n        fx: Number.isNaN(from.angle) ? 0 : Math.cos(from.angle || 0) * angleHelper,\n        fy: Number.isNaN(from.angle) ? 0 : Math.sin(from.angle || 0) * -angleHelper,\n        tx: Number.isNaN(to.angle) ? 0 : Math.cos(to.angle || 0) * -angleHelper,\n        ty: Number.isNaN(to.angle) ? 0 : Math.sin(to.angle || 0) * angleHelper,\n    };\n}\nexport class EdgeLine extends LineElement {\n    draw(ctx) {\n        const { options } = this;\n        ctx.save();\n        ctx.lineCap = options.borderCapStyle;\n        ctx.setLineDash(options.borderDash || []);\n        ctx.lineDashOffset = options.borderDashOffset;\n        ctx.lineJoin = options.borderJoinStyle;\n        ctx.lineWidth = options.borderWidth;\n        ctx.strokeStyle = options.borderColor;\n        const orientations = {\n            horizontal,\n            vertical,\n            radial,\n        };\n        const layout = orientations[this._orientation] || orientations.horizontal;\n        const renderLine = (from, to) => {\n            const shift = layout(from, to, options);\n            const fromX = {\n                cpx: from.x + shift.fx,\n                cpy: from.y + shift.fy,\n            };\n            const toX = {\n                cpx: to.x + shift.tx,\n                cpy: to.y + shift.ty,\n            };\n            if (options.stepped === 'middle') {\n                const midpoint = (from.x + to.x) / 2.0;\n                ctx.lineTo(midpoint, from.y);\n                ctx.lineTo(midpoint, to.y);\n                ctx.lineTo(to.x, to.y);\n            }\n            else if (options.stepped === 'after') {\n                ctx.lineTo(from.x, to.y);\n                ctx.lineTo(to.x, to.y);\n            }\n            else if (options.stepped) {\n                ctx.lineTo(to.x, from.y);\n                ctx.lineTo(to.x, to.y);\n            }\n            else if (options.tension) {\n                ctx.bezierCurveTo(fromX.cpx, fromX.cpy, toX.cpx, toX.cpy, to.x, to.y);\n            }\n            else {\n                ctx.lineTo(to.x, to.y);\n            }\n            return to;\n        };\n        const source = this.source.getProps(['x', 'y', 'angle']);\n        const target = this.target.getProps(['x', 'y', 'angle']);\n        const points = this.getProps(['points']).points;\n        ctx.beginPath();\n        let from = source;\n        ctx.moveTo(from.x, from.y);\n        if (points && points.length > 0) {\n            from = points.reduce(renderLine, from);\n        }\n        renderLine(from, target);\n        ctx.stroke();\n        if (options.directed) {\n            const to = target;\n            const shift = layout(from, to, options);\n            const s = options.arrowHeadSize;\n            const offset = options.arrowHeadOffset;\n            ctx.save();\n            ctx.translate(to.x, target.y);\n            if (options.stepped === 'middle') {\n                const midpoint = (from.x + to.x) / 2.0;\n                ctx.rotate(Math.atan2(to.y - to.y, to.x - midpoint));\n            }\n            else if (options.stepped === 'after') {\n                ctx.rotate(Math.atan2(to.y - to.y, to.x - from.x));\n            }\n            else if (options.stepped) {\n                ctx.rotate(Math.atan2(to.y - from.y, to.x - to.x));\n            }\n            else if (options.tension) {\n                const toX = {\n                    x: to.x + shift.tx,\n                    y: to.y + shift.ty,\n                };\n                const f = 0.1;\n                ctx.rotate(Math.atan2(to.y - toX.y * (1 - f) - from.y * f, to.x - toX.x * (1 - f) - from.x * f));\n            }\n            else {\n                ctx.rotate(Math.atan2(to.y - from.y, to.x - from.x));\n            }\n            ctx.translate(-offset, 0);\n            ctx.beginPath();\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-s, -s / 2);\n            ctx.lineTo(-s * 0.9, 0);\n            ctx.lineTo(-s, s / 2);\n            ctx.closePath();\n            ctx.fillStyle = ctx.strokeStyle;\n            ctx.fill();\n            ctx.restore();\n        }\n        ctx.restore();\n    }\n}\nEdgeLine.id = 'edgeLine';\nEdgeLine.defaults = {\n    ...LineElement.defaults,\n    tension: 0,\n    directed: false,\n    arrowHeadSize: 15,\n    arrowHeadOffset: 5,\n};\nEdgeLine.defaultRoutes = LineElement.defaultRoutes;\nEdgeLine.descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash',\n};\n//# sourceMappingURL=EdgeLine.js.map", "function interpolateNumber(from, to, factor) {\n    if (from === to) {\n        return to;\n    }\n    return from + (to - from) * factor;\n}\nfunction interpolatorPoint(fromArray, i, to, factor) {\n    const from = fromArray[i] || fromArray[i - 1] || fromArray._source;\n    if (!from) {\n        return to;\n    }\n    const x = interpolateNumber(from.x, to.x, factor);\n    const y = interpolateNumber(from.y, to.y, factor);\n    const angle = Number.isNaN(from.angle) ? interpolateNumber(from.angle, to.angle, factor) : undefined;\n    return { x, y, angle };\n}\nexport default function interpolatePoints(from, to, factor) {\n    if (Array.isArray(from) && Array.isArray(to) && to.length > 0) {\n        return to.map((t, i) => interpolatorPoint(from, i, t, factor));\n    }\n    return to;\n}\n//# sourceMappingURL=interpolatePoints.js.map", "import { registry } from 'chart.js';\nexport default function patchController(type, config, controller, elements = [], scales = []) {\n    registry.addControllers(controller);\n    if (Array.isArray(elements)) {\n        registry.addElements(...elements);\n    }\n    else {\n        registry.addElements(elements);\n    }\n    if (Array.isArray(scales)) {\n        registry.addScales(...scales);\n    }\n    else {\n        registry.addScales(scales);\n    }\n    const c = config;\n    c.type = type;\n    return c;\n}\n//# sourceMappingURL=patchController.js.map", "import { defaults, Chart, ScatterController, registry, LinearScale, PointElement, } from 'chart.js';\nimport { merge, clipArea, unclipArea, listenArrayEvents, unlistenArrayEvents } from 'chart.js/helpers';\nimport { EdgeLine } from '../elements';\nimport interpolatePoints from './interpolatePoints';\nimport patchController from './patchController';\nexport class GraphController extends ScatterController {\n    constructor() {\n        super(...arguments);\n        this._scheduleResyncLayoutId = -1;\n        this._edgeListener = {\n            _onDataPush: (...args) => {\n                const count = args.length;\n                const start = this.getDataset().edges.length - count;\n                const parsed = this._cachedMeta._parsedEdges;\n                args.forEach((edge) => {\n                    parsed.push(this._parseDefinedEdge(edge));\n                });\n                this._insertEdgeElements(start, count);\n            },\n            _onDataPop: () => {\n                this._cachedMeta.edges.pop();\n                this._cachedMeta._parsedEdges.pop();\n                this._scheduleResyncLayout();\n            },\n            _onDataShift: () => {\n                this._cachedMeta.edges.shift();\n                this._cachedMeta._parsedEdges.shift();\n                this._scheduleResyncLayout();\n            },\n            _onDataSplice: (start, count, ...args) => {\n                this._cachedMeta.edges.splice(start, count);\n                this._cachedMeta._parsedEdges.splice(start, count);\n                if (args.length > 0) {\n                    const parsed = this._cachedMeta._parsedEdges;\n                    parsed.splice(start, 0, ...args.map((edge) => this._parseDefinedEdge(edge)));\n                    this._insertEdgeElements(start, args.length);\n                }\n                else {\n                    this._scheduleResyncLayout();\n                }\n            },\n            _onDataUnshift: (...args) => {\n                const parsed = this._cachedMeta._parsedEdges;\n                parsed.unshift(...args.map((edge) => this._parseDefinedEdge(edge)));\n                this._insertEdgeElements(0, args.length);\n            },\n        };\n    }\n    initialize() {\n        const type = this._type;\n        const defaultConfig = defaults.datasets[type];\n        this.edgeElementType = registry.getElement(defaultConfig.edgeElementType);\n        super.initialize();\n        this.enableOptionSharing = true;\n        this._scheduleResyncLayout();\n    }\n    parse(start, count) {\n        const meta = this._cachedMeta;\n        const data = this._data;\n        const { iScale, vScale } = meta;\n        for (let i = 0; i < count; i += 1) {\n            const index = i + start;\n            const d = data[index];\n            const v = (meta._parsed[index] || {});\n            if (d && typeof d.x === 'number') {\n                v.x = d.x;\n            }\n            if (d && typeof d.y === 'number') {\n                v.y = d.y;\n            }\n            meta._parsed[index] = v;\n        }\n        if (meta._parsed.length > data.length) {\n            meta._parsed.splice(data.length, meta._parsed.length - data.length);\n        }\n        this._cachedMeta._sorted = false;\n        iScale._dataLimitsCached = false;\n        vScale._dataLimitsCached = false;\n        this._parseEdges();\n    }\n    reset() {\n        this.resetLayout();\n        super.reset();\n    }\n    update(mode) {\n        super.update(mode);\n        const meta = this._cachedMeta;\n        const edges = meta.edges || [];\n        this.updateEdgeElements(edges, 0, mode);\n    }\n    destroy() {\n        ScatterController.prototype.destroy.call(this);\n        if (this._edges) {\n            unlistenArrayEvents(this._edges, this._edgeListener);\n        }\n        this.stopLayout();\n    }\n    updateEdgeElements(edges, start, mode) {\n        var _a, _b, _c;\n        const bak = {\n            _cachedDataOpts: this._cachedDataOpts,\n            dataElementType: this.dataElementType,\n            _sharedOptions: this._sharedOptions,\n        };\n        this._cachedDataOpts = {};\n        this.dataElementType = this.edgeElementType;\n        this._sharedOptions = this._edgeSharedOptions;\n        const dataset = this.getDataset();\n        const meta = this._cachedMeta;\n        const nodeElements = meta.data;\n        const data = this._cachedMeta._parsedEdges;\n        this.getContext(-1, false, mode);\n        this.getDataset = () => {\n            return new Proxy(dataset, {\n                get(obj, prop) {\n                    var _a;\n                    return prop === 'data' ? (_a = obj.edges) !== null && _a !== void 0 ? _a : [] : obj[prop];\n                },\n            });\n        };\n        this.getParsed = (index) => {\n            return data[index];\n        };\n        meta.data = meta.edges;\n        const reset = mode === 'reset';\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const dummyShared = {};\n        const sharedOptions = (_a = this.getSharedOptions(firstOpts)) !== null && _a !== void 0 ? _a : dummyShared;\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const { xScale, yScale } = meta;\n        const base = {\n            x: (_b = xScale === null || xScale === void 0 ? void 0 : xScale.getBasePixel()) !== null && _b !== void 0 ? _b : 0,\n            y: (_c = yScale === null || yScale === void 0 ? void 0 : yScale.getBasePixel()) !== null && _c !== void 0 ? _c : 0,\n        };\n        function copyPoint(point) {\n            var _a, _b;\n            const x = reset ? base.x : (_a = xScale === null || xScale === void 0 ? void 0 : xScale.getPixelForValue(point.x, 0)) !== null && _a !== void 0 ? _a : 0;\n            const y = reset ? base.y : (_b = yScale === null || yScale === void 0 ? void 0 : yScale.getPixelForValue(point.y, 0)) !== null && _b !== void 0 ? _b : 0;\n            return {\n                x,\n                y,\n                angle: point.angle,\n            };\n        }\n        for (let i = 0; i < edges.length; i += 1) {\n            const edge = edges[i];\n            const index = start + i;\n            const parsed = data[index];\n            const properties = {\n                source: nodeElements[parsed.source],\n                target: nodeElements[parsed.target],\n                points: Array.isArray(parsed.points) ? parsed.points.map((p) => copyPoint(p)) : [],\n            };\n            properties.points._source = nodeElements[parsed.source];\n            if (includeOptions) {\n                if (sharedOptions !== dummyShared) {\n                    properties.options = sharedOptions;\n                }\n                else {\n                    properties.options = this.resolveDataElementOptions(index, mode);\n                }\n            }\n            this.updateEdgeElement(edge, index, properties, mode);\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        this._edgeSharedOptions = this._sharedOptions;\n        Object.assign(this, bak);\n        delete this.getDataset;\n        delete this.getParsed;\n        meta.data = nodeElements;\n    }\n    updateEdgeElement(edge, index, properties, mode) {\n        super.updateElement(edge, index, properties, mode);\n    }\n    updateElement(point, index, properties, mode) {\n        var _a;\n        if (mode === 'reset') {\n            const { xScale } = this._cachedMeta;\n            properties.x = (_a = xScale === null || xScale === void 0 ? void 0 : xScale.getBasePixel()) !== null && _a !== void 0 ? _a : 0;\n        }\n        super.updateElement(point, index, properties, mode);\n    }\n    resolveNodeIndex(nodes, ref) {\n        if (typeof ref === 'number') {\n            return ref;\n        }\n        if (typeof ref === 'string') {\n            const labels = this.chart.data.labels;\n            return labels.indexOf(ref);\n        }\n        const nIndex = nodes.indexOf(ref);\n        if (nIndex >= 0) {\n            return nIndex;\n        }\n        const data = this.getDataset().data;\n        const index = data.indexOf(ref);\n        if (index >= 0) {\n            return index;\n        }\n        console.warn('cannot resolve edge ref', ref);\n        return -1;\n    }\n    buildOrUpdateElements() {\n        const dataset = this.getDataset();\n        const edges = dataset.edges || [];\n        if (this._edges !== edges) {\n            if (this._edges) {\n                unlistenArrayEvents(this._edges, this._edgeListener);\n            }\n            if (edges && Object.isExtensible(edges)) {\n                listenArrayEvents(edges, this._edgeListener);\n            }\n            this._edges = edges;\n        }\n        super.buildOrUpdateElements();\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const edges = this._cachedMeta.edges || [];\n        const elements = (meta.data || []);\n        const area = this.chart.chartArea;\n        const ctx = this._ctx;\n        if (edges.length > 0) {\n            clipArea(ctx, area);\n            edges.forEach((edge) => edge.draw.call(edge, ctx, area));\n            unclipArea(ctx);\n        }\n        elements.forEach((elem) => elem.draw.call(elem, ctx, area));\n    }\n    _resyncElements() {\n        ScatterController.prototype._resyncElements.call(this);\n        const meta = this._cachedMeta;\n        const edges = meta._parsedEdges;\n        const metaEdges = meta.edges || (meta.edges = []);\n        const numMeta = metaEdges.length;\n        const numData = edges.length;\n        if (numData < numMeta) {\n            metaEdges.splice(numData, numMeta - numData);\n            this._scheduleResyncLayout();\n        }\n        else if (numData > numMeta) {\n            this._insertEdgeElements(numMeta, numData - numMeta);\n        }\n    }\n    getTreeRootIndex() {\n        const ds = this.getDataset();\n        const nodes = ds.data;\n        if (ds.derivedEdges) {\n            return nodes.findIndex((d) => d.parent == null);\n        }\n        const edges = this._cachedMeta._parsedEdges || [];\n        const nodeIndices = new Set(nodes.map((_, i) => i));\n        edges.forEach((edge) => {\n            nodeIndices.delete(edge.target);\n        });\n        return Array.from(nodeIndices)[0];\n    }\n    getTreeRoot() {\n        const index = this.getTreeRootIndex();\n        const p = this.getParsed(index);\n        p.index = index;\n        return p;\n    }\n    getTreeChildren(node) {\n        var _a;\n        const edges = this._cachedMeta._parsedEdges;\n        const index = (_a = node.index) !== null && _a !== void 0 ? _a : 0;\n        return edges\n            .filter((d) => d.source === index)\n            .map((d) => {\n            const p = this.getParsed(d.target);\n            p.index = d.target;\n            return p;\n        });\n    }\n    _parseDefinedEdge(edge) {\n        const ds = this.getDataset();\n        const { data } = ds;\n        return {\n            source: this.resolveNodeIndex(data, edge.source),\n            target: this.resolveNodeIndex(data, edge.target),\n            points: [],\n        };\n    }\n    _parseEdges() {\n        const ds = this.getDataset();\n        const data = ds.data;\n        const meta = this._cachedMeta;\n        if (ds.edges) {\n            const edges = ds.edges.map((edge) => this._parseDefinedEdge(edge));\n            meta._parsedEdges = edges;\n            return edges;\n        }\n        const edges = [];\n        meta._parsedEdges = edges;\n        data.forEach((node, i) => {\n            if (node.parent != null) {\n                const parent = this.resolveNodeIndex(data, node.parent);\n                edges.push({\n                    source: parent,\n                    target: i,\n                    points: [],\n                });\n            }\n        });\n        return edges;\n    }\n    addElements() {\n        super.addElements();\n        const meta = this._cachedMeta;\n        const edges = this._parseEdges();\n        const metaData = new Array(edges.length);\n        meta.edges = metaData;\n        for (let i = 0; i < edges.length; i += 1) {\n            metaData[i] = new this.edgeElementType();\n        }\n    }\n    _resyncEdgeElements() {\n        const meta = this._cachedMeta;\n        const edges = this._parseEdges();\n        const metaData = meta.edges || (meta.edges = []);\n        for (let i = 0; i < edges.length; i += 1) {\n            metaData[i] = metaData[i] || new this.edgeElementType();\n        }\n        if (edges.length < metaData.length) {\n            metaData.splice(edges.length, metaData.length);\n        }\n    }\n    _insertElements(start, count) {\n        ScatterController.prototype._insertElements.call(this, start, count);\n        if (count > 0) {\n            this._resyncEdgeElements();\n        }\n    }\n    _removeElements(start, count) {\n        ScatterController.prototype._removeElements.call(this, start, count);\n        if (count > 0) {\n            this._resyncEdgeElements();\n        }\n    }\n    _insertEdgeElements(start, count) {\n        const elements = [];\n        for (let i = 0; i < count; i += 1) {\n            elements.push(new this.edgeElementType());\n        }\n        this._cachedMeta.edges.splice(start, 0, ...elements);\n        this.updateEdgeElements(elements, start, 'reset');\n        this._scheduleResyncLayout();\n    }\n    reLayout() {\n    }\n    resetLayout() {\n    }\n    stopLayout() {\n    }\n    _scheduleResyncLayout() {\n        if (this._scheduleResyncLayoutId != null && this._scheduleResyncLayoutId >= 0) {\n            return;\n        }\n        this._scheduleResyncLayoutId = requestAnimationFrame(() => {\n            this._scheduleResyncLayoutId = -1;\n            this.resyncLayout();\n        });\n    }\n    resyncLayout() {\n    }\n}\nGraphController.id = 'graph';\nGraphController.defaults = merge({}, [\n    ScatterController.defaults,\n    {\n        clip: 10,\n        animations: {\n            points: {\n                fn: interpolatePoints,\n                properties: ['points'],\n            },\n        },\n        edgeElementType: EdgeLine.id,\n    },\n]);\nGraphController.overrides = merge({}, [\n    ScatterController.overrides,\n    {\n        layout: {\n            padding: 10,\n        },\n        scales: {\n            x: {\n                display: false,\n                ticks: {\n                    maxTicksLimit: 2,\n                    precision: 100,\n                    minRotation: 0,\n                    maxRotation: 0,\n                },\n            },\n            y: {\n                display: false,\n                ticks: {\n                    maxTicksLimit: 2,\n                    precision: 100,\n                    minRotation: 0,\n                    maxRotation: 0,\n                },\n            },\n        },\n        plugins: {\n            tooltip: {\n                callbacks: {\n                    label(item) {\n                        var _a, _b;\n                        return (_b = (_a = item.chart.data) === null || _a === void 0 ? void 0 : _a.labels) === null || _b === void 0 ? void 0 : _b[item.dataIndex];\n                    },\n                },\n            },\n        },\n    },\n]);\nexport class GraphChart extends Chart {\n    constructor(item, config) {\n        super(item, patchController('graph', config, GraphController, [EdgeLine, PointElement], LinearScale));\n    }\n}\nGraphChart.id = GraphController.id;\n//# sourceMappingURL=GraphController.js.map", "import { Chart, LinearScale, PointElement, } from 'chart.js';\nimport { merge } from 'chart.js/helpers';\nimport { forceCenter, forceCollide, forceLink, forceManyBody, forceRadial, forceSimulation, forceX, forceY, } from 'd3-force';\nimport { EdgeLine } from '../elements';\nimport { GraphController, } from './GraphController';\nimport patchController from './patchController';\nexport class ForceDirectedGraphController extends GraphController {\n    constructor(chart, datasetIndex) {\n        super(chart, datasetIndex);\n        this._simulation = forceSimulation()\n            .on('tick', () => {\n            this._copyPosition();\n            this.chart.render();\n        })\n            .on('end', () => {\n            this._copyPosition();\n            this.chart.render();\n            this.chart.update('default');\n        });\n        const sim = this.options.simulation;\n        const fs = {\n            center: forceCenter,\n            collide: forceCollide,\n            link: forceLink,\n            manyBody: forceManyBody,\n            x: forceX,\n            y: forceY,\n            radial: forceRadial,\n        };\n        Object.keys(fs).forEach((key) => {\n            const options = sim.forces[key];\n            if (!options) {\n                return;\n            }\n            const f = fs[key]();\n            if (typeof options !== 'boolean') {\n                Object.keys(options).forEach((attr) => {\n                    f[attr](options[attr]);\n                });\n            }\n            this._simulation.force(key, f);\n        });\n        this._simulation.stop();\n    }\n    _copyPosition() {\n        const nodes = this._cachedMeta._parsed;\n        const minmax = nodes.reduce((acc, v) => {\n            const s = v._sim;\n            if (!s || s.x == null || s.y == null) {\n                return acc;\n            }\n            if (s.x < acc.minX) {\n                acc.minX = s.x;\n            }\n            if (s.x > acc.maxX) {\n                acc.maxX = s.x;\n            }\n            if (s.y < acc.minY) {\n                acc.minY = s.y;\n            }\n            if (s.y > acc.maxY) {\n                acc.maxY = s.y;\n            }\n            return acc;\n        }, {\n            minX: Number.POSITIVE_INFINITY,\n            maxX: Number.NEGATIVE_INFINITY,\n            minY: Number.POSITIVE_INFINITY,\n            maxY: Number.NEGATIVE_INFINITY,\n        });\n        const rescaleX = (v) => ((v - minmax.minX) / (minmax.maxX - minmax.minX)) * 2 - 1;\n        const rescaleY = (v) => ((v - minmax.minY) / (minmax.maxY - minmax.minY)) * 2 - 1;\n        nodes.forEach((node) => {\n            var _a, _b;\n            if (node._sim) {\n                node.x = rescaleX((_a = node._sim.x) !== null && _a !== void 0 ? _a : 0);\n                node.y = rescaleY((_b = node._sim.y) !== null && _b !== void 0 ? _b : 0);\n            }\n        });\n        const { xScale, yScale } = this._cachedMeta;\n        const elems = this._cachedMeta.data;\n        elems.forEach((elem, i) => {\n            var _a, _b;\n            const parsed = nodes[i];\n            Object.assign(elem, {\n                x: (_a = xScale === null || xScale === void 0 ? void 0 : xScale.getPixelForValue(parsed.x, i)) !== null && _a !== void 0 ? _a : 0,\n                y: (_b = yScale === null || yScale === void 0 ? void 0 : yScale.getPixelForValue(parsed.y, i)) !== null && _b !== void 0 ? _b : 0,\n                skip: false,\n            });\n        });\n    }\n    resetLayout() {\n        super.resetLayout();\n        this._simulation.stop();\n        const nodes = this._cachedMeta._parsed.map((node, i) => {\n            const simNode = { ...node };\n            simNode.index = i;\n            node._sim = simNode;\n            if (!node.reset) {\n                return simNode;\n            }\n            delete simNode.x;\n            delete simNode.y;\n            delete simNode.vx;\n            delete simNode.vy;\n            return simNode;\n        });\n        this._simulation.nodes(nodes);\n        this._simulation.alpha(1).restart();\n    }\n    resyncLayout() {\n        super.resyncLayout();\n        this._simulation.stop();\n        const meta = this._cachedMeta;\n        const nodes = meta._parsed.map((node, i) => {\n            const simNode = { ...node };\n            simNode.index = i;\n            node._sim = simNode;\n            if (simNode.x === null) {\n                delete simNode.x;\n            }\n            if (simNode.y === null) {\n                delete simNode.y;\n            }\n            if (simNode.x == null && simNode.y == null) {\n                node.reset = true;\n            }\n            return simNode;\n        });\n        const link = this._simulation.force('link');\n        if (link) {\n            link.links([]);\n        }\n        this._simulation.nodes(nodes);\n        if (link) {\n            link.links((meta._parsedEdges || []).map((l) => ({ ...l })));\n        }\n        if (this.options.simulation.initialIterations > 0) {\n            this._simulation.alpha(1);\n            this._simulation.tick(this.options.simulation.initialIterations);\n            this._copyPosition();\n            if (this.options.simulation.autoRestart) {\n                this._simulation.restart();\n            }\n            else {\n                requestAnimationFrame(() => this.chart.update());\n            }\n        }\n        else if (this.options.simulation.autoRestart) {\n            this._simulation.alpha(1).restart();\n        }\n    }\n    reLayout() {\n        this._simulation.alpha(1).restart();\n    }\n    stopLayout() {\n        super.stopLayout();\n        this._simulation.stop();\n    }\n}\nForceDirectedGraphController.id = 'forceDirectedGraph';\nForceDirectedGraphController.defaults = merge({}, [\n    GraphController.defaults,\n    {\n        animation: false,\n        simulation: {\n            initialIterations: 0,\n            autoRestart: true,\n            forces: {\n                center: true,\n                collide: false,\n                link: true,\n                manyBody: true,\n                x: false,\n                y: false,\n                radial: false,\n            },\n        },\n    },\n]);\nForceDirectedGraphController.overrides = merge({}, [\n    GraphController.overrides,\n    {\n        scales: {\n            x: {\n                min: -1,\n                max: 1,\n            },\n            y: {\n                min: -1,\n                max: 1,\n            },\n        },\n    },\n]);\nexport class ForceDirectedGraphChart extends Chart {\n    constructor(item, config) {\n        super(item, patchController('forceDirectedGraph', config, ForceDirectedGraphController, [EdgeLine, PointElement], LinearScale));\n    }\n}\nForceDirectedGraphChart.id = ForceDirectedGraphController.id;\n//# sourceMappingURL=ForceDirectedGraphController.js.map", "import { Chart, LinearScale, PointElement, } from 'chart.js';\nimport { merge } from 'chart.js/helpers';\nimport { cluster, hierarchy, tree } from 'd3-hierarchy';\nimport { EdgeLine } from '../elements';\nimport { GraphController, } from './GraphController';\nimport patchController from './patchController';\nexport class DendrogramController extends GraphController {\n    updateEdgeElement(line, index, properties, mode) {\n        properties._orientation = this.options.tree.orientation;\n        super.updateEdgeElement(line, index, properties, mode);\n    }\n    updateElement(point, index, properties, mode) {\n        if (index != null) {\n            properties.angle = this.getParsed(index).angle;\n        }\n        super.updateElement(point, index, properties, mode);\n    }\n    resyncLayout() {\n        const meta = this._cachedMeta;\n        meta.root = hierarchy(this.getTreeRoot(), (d) => this.getTreeChildren(d))\n            .count()\n            .sort((a, b) => { var _a, _b; return b.height - a.height || ((_a = b.data.index) !== null && _a !== void 0 ? _a : 0) - ((_b = a.data.index) !== null && _b !== void 0 ? _b : 0); });\n        this.doLayout(meta.root);\n        super.resyncLayout();\n    }\n    reLayout(newOptions = {}) {\n        if (newOptions) {\n            Object.assign(this.options.tree, newOptions);\n            const ds = this.getDataset();\n            if (ds.tree) {\n                Object.assign(ds.tree, newOptions);\n            }\n            else {\n                ds.tree = newOptions;\n            }\n        }\n        this.doLayout(this._cachedMeta.root);\n    }\n    doLayout(root) {\n        const options = this.options.tree;\n        const layout = options.mode === 'tree'\n            ? tree()\n            : cluster();\n        if (options.orientation === 'radial') {\n            layout.size([Math.PI * 2, 1]);\n        }\n        else {\n            layout.size([2, 2]);\n        }\n        const orientation = {\n            horizontal: (d) => {\n                d.data.x = d.y - 1;\n                d.data.y = -d.x + 1;\n            },\n            vertical: (d) => {\n                d.data.x = d.x - 1;\n                d.data.y = -d.y + 1;\n            },\n            radial: (d) => {\n                d.data.x = Math.cos(d.x) * d.y;\n                d.data.y = Math.sin(d.x) * d.y;\n                d.data.angle = d.y === 0 ? Number.NaN : d.x;\n            },\n        };\n        layout(root).each((orientation[options.orientation] || orientation.horizontal));\n        requestAnimationFrame(() => this.chart.update());\n    }\n}\nDendrogramController.id = 'dendrogram';\nDendrogramController.defaults = merge({}, [\n    GraphController.defaults,\n    {\n        tree: {\n            mode: 'dendrogram',\n            orientation: 'horizontal',\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: ['x', 'y', 'angle', 'radius', 'rotation', 'borderWidth'],\n            },\n        },\n        tension: 0.4,\n    },\n]);\nDendrogramController.overrides = merge({}, [\n    GraphController.overrides,\n    {\n        scales: {\n            x: {\n                min: -1,\n                max: 1,\n            },\n            y: {\n                min: -1,\n                max: 1,\n            },\n        },\n    },\n]);\nexport class DendrogramChart extends Chart {\n    constructor(item, config) {\n        super(item, patchController('dendrogram', config, DendrogramController, [EdgeLine, PointElement], LinearScale));\n    }\n}\nDendrogramChart.id = DendrogramController.id;\nexport class DendogramController extends DendrogramController {\n}\nDendogramController.id = 'dendogram';\nDendogramController.defaults = merge({}, [\n    DendrogramController.defaults,\n    {\n        tree: {\n            mode: 'dendrogram',\n        },\n    },\n]);\nexport const DendogramChart = DendrogramChart;\n//# sourceMappingURL=DendrogramController.js.map", "import { Chart, LinearScale, PointElement, } from 'chart.js';\nimport { merge } from 'chart.js/helpers';\nimport { EdgeLine } from '../elements';\nimport { DendrogramController } from './DendrogramController';\nimport patchController from './patchController';\nexport class TreeController extends DendrogramController {\n}\nTreeController.id = 'tree';\nTreeController.defaults = merge({}, [\n    DendrogramController.defaults,\n    {\n        tree: {\n            mode: 'tree',\n        },\n    },\n]);\nTreeController.overrides = DendrogramController.overrides;\nexport class TreeChart extends Chart {\n    constructor(item, config) {\n        super(item, patchController('tree', config, TreeController, [EdgeLine, PointElement], LinearScale));\n    }\n}\nTreeChart.id = TreeController.id;\n//# sourceMappingURL=TreeController.js.map"],
  "mappings": "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",
  "names": ["x", "y", "x", "y", "x", "y", "x", "y", "x2", "y2", "x3", "y3", "x", "y", "x", "y", "x", "x", "y", "count", "x", "y", "m", "i", "c", "now", "x", "y", "x", "y", "node", "strength", "c", "x2", "x", "y", "x_default", "x", "y_default", "y", "a", "x", "c", "y", "index", "index", "index", "find_default", "index", "a", "c", "find_default", "defaultSeparation", "a", "x", "x", "custom", "m", "x", "from", "x", "y", "c", "count", "index", "_a", "_b", "edges", "x_default", "y_default", "a"]
}
